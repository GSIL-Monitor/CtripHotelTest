<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="DST65976" name="Default test" tests="8" failures="0" timestamp="22 Jan 2018 12:54:17 GMT" time="17.622" errors="0">
  <testcase name="@BeforeClass beforeClass" time="0.0" classname="test.apptest.hotel.CtripHotel">
    <failure type="org.openqa.selenium.WebDriverException" message="An unknown server-side error occurred while processing the command. Original error: Error occured while starting App. Original error: Permission to start activity denied. (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 15.64 seconds
Build info: version: &amp;apos;2.53.1&amp;apos;, revision: &amp;apos;a36b8b1cd5757287168e54b817830adce9b0158d&amp;apos;, time: &amp;apos;2016-06-30 19:26:09&amp;apos;
System info: host: &amp;apos;DST65976&amp;apos;, ip: &amp;apos;192.168.56.1&amp;apos;, os.name: &amp;apos;Windows 7&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;6.1&amp;apos;, java.version: &amp;apos;1.8.0_161&amp;apos;
Driver info: io.appium.java_client.android.AndroidDriver">
      <![CDATA[org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Error occured while starting App. Original error: Permission to start activity denied. (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 15.64 seconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '192.168.56.1', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_161'
Driver info: io.appium.java_client.android.AndroidDriver
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:40)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:249)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:144)
	at io.appium.java_client.DefaultGenericMobileDriver.<init>(DefaultGenericMobileDriver.java:36)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:114)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:132)
	at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:92)
	at service.impl.InitialServiceImpl.appiumAndroidCtripSetUp(InitialServiceImpl.java:57)
	at test.apptest.hotel.CtripHotel.beforeClass(CtripHotel.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:175)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:107)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
]]>
    </failure>
  </testcase> <!-- @BeforeClass beforeClass -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="test.apptest.hotel.CtripHotel">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="test.apptest.hotel.CtripHotel">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="test.apptest.hotel.CtripHotel">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="test.apptest.hotel.CtripHotel">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="test.apptest.hotel.CtripHotel">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="test.apptest.hotel.CtripHotel">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="test.apptest.hotel.CtripHotel">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@BeforeMethod springTestContextBeforeTestMethod" time="0.0" classname="test.apptest.hotel.CtripHotel">
    <skipped/>
  </testcase> <!-- @BeforeMethod springTestContextBeforeTestMethod -->
  <testcase name="@AfterClass afterClass" time="0.0" classname="test.apptest.hotel.CtripHotel">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase name="hotelLogin" time="0.003" classname="test.apptest.hotel.CtripHotel">
    <skipped/>
  </testcase> <!-- hotelLogin -->
  <testcase name="hotelLogin" time="0.0" classname="test.apptest.hotel.CtripHotel">
    <skipped/>
  </testcase> <!-- hotelLogin -->
  <testcase name="hotelLogin" time="0.0" classname="test.apptest.hotel.CtripHotel">
    <skipped/>
  </testcase> <!-- hotelLogin -->
  <testcase name="hotelLogin" time="0.001" classname="test.apptest.hotel.CtripHotel">
    <skipped/>
  </testcase> <!-- hotelLogin -->
  <testcase name="hotelLogin" time="0.002" classname="test.apptest.hotel.CtripHotel">
    <skipped/>
  </testcase> <!-- hotelLogin -->
  <testcase name="hotelLogin" time="0.002" classname="test.apptest.hotel.CtripHotel">
    <skipped/>
  </testcase> <!-- hotelLogin -->
  <testcase name="hotelLogin" time="0.0" classname="test.apptest.hotel.CtripHotel">
    <skipped/>
  </testcase> <!-- hotelLogin -->
  <testcase name="hotelLogin" time="0.005" classname="test.apptest.hotel.CtripHotel">
    <skipped/>
  </testcase> <!-- hotelLogin -->
</testsuite> <!-- Default test -->
