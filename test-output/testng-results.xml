<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="8" failed="0" total="8" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="17622" started-at="2018-01-22T12:53:59Z" finished-at="2018-01-22T12:54:17Z">
    <groups>
      <group name="Base">
        <method signature="CtripHotel.hotelLogin(java.util.Map)[pri:0, instance:test.apptest.hotel.CtripHotel@429bd883]" name="hotelLogin" class="test.apptest.hotel.CtripHotel"/>
      </group> <!-- Base -->
    </groups>
    <test name="Default test" duration-ms="17622" started-at="2018-01-22T12:53:59Z" finished-at="2018-01-22T12:54:17Z">
      <class name="test.apptest.hotel.CtripHotel">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:test.apptest.hotel.CtripHotel@429bd883]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="5" started-at="2018-01-22T20:53:59Z" finished-at="2018-01-22T20:53:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:test.apptest.hotel.CtripHotel@429bd883]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="630" started-at="2018-01-22T20:53:59Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-01-22T20:54:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="FAIL" signature="beforeClass()[pri:0, instance:test.apptest.hotel.CtripHotel@429bd883]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-01-22T20:54:00Z" finished-at="2018-01-22T20:54:00Z">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[An unknown server-side error occurred while processing the command. Original error: Error occured while starting App. Original error: Permission to start activity denied. (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 15.64 seconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '192.168.56.1', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_161'
Driver info: io.appium.java_client.android.AndroidDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: Error occured while starting App. Original error: Permission to start activity denied. (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 15.64 seconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '192.168.56.1', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_161'
Driver info: io.appium.java_client.android.AndroidDriver
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:40)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:249)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:144)
	at io.appium.java_client.DefaultGenericMobileDriver.<init>(DefaultGenericMobileDriver.java:36)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:114)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:132)
	at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:92)
	at service.impl.InitialServiceImpl.appiumAndroidCtripSetUp(InitialServiceImpl.java:57)
	at test.apptest.hotel.CtripHotel.beforeClass(CtripHotel.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:175)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:107)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.CtripHotel@429bd883]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-01-22T20:54:16Z" finished-at="2018-01-22T20:54:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="hotelLogin(java.util.Map)[pri:0, instance:test.apptest.hotel.CtripHotel@429bd883]" name="hotelLogin" duration-ms="3" started-at="2018-01-22T20:54:16Z" description="hotelByYyf" data-provider="testData" finished-at="2018-01-22T20:54:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{result=上海, searchKeyWord=上海}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hotelLogin -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.CtripHotel@429bd883]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="2" started-at="2018-01-22T20:54:16Z" finished-at="2018-01-22T20:54:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.CtripHotel.hotelLogin(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.CtripHotel@429bd883]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-01-22T20:54:16Z" finished-at="2018-01-22T20:54:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="hotelLogin(java.util.Map)[pri:0, instance:test.apptest.hotel.CtripHotel@429bd883]" name="hotelLogin" duration-ms="0" started-at="2018-01-22T20:54:16Z" description="hotelByYyf" data-provider="testData" finished-at="2018-01-22T20:54:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{result=北京, searchKeyWord=北京}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hotelLogin -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.CtripHotel@429bd883]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-01-22T20:54:16Z" finished-at="2018-01-22T20:54:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.CtripHotel.hotelLogin(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.CtripHotel@429bd883]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-01-22T20:54:16Z" finished-at="2018-01-22T20:54:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="hotelLogin(java.util.Map)[pri:0, instance:test.apptest.hotel.CtripHotel@429bd883]" name="hotelLogin" duration-ms="0" started-at="2018-01-22T20:54:16Z" description="hotelByYyf" data-provider="testData" finished-at="2018-01-22T20:54:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{result=上海, searchKeyWord=上海}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hotelLogin -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.CtripHotel@429bd883]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="2" started-at="2018-01-22T20:54:16Z" finished-at="2018-01-22T20:54:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.CtripHotel.hotelLogin(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.CtripHotel@429bd883]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-01-22T20:54:16Z" finished-at="2018-01-22T20:54:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="hotelLogin(java.util.Map)[pri:0, instance:test.apptest.hotel.CtripHotel@429bd883]" name="hotelLogin" duration-ms="1" started-at="2018-01-22T20:54:16Z" description="hotelByYyf" data-provider="testData" finished-at="2018-01-22T20:54:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{result=北京, searchKeyWord=北京}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hotelLogin -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.CtripHotel@429bd883]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-01-22T20:54:16Z" finished-at="2018-01-22T20:54:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.CtripHotel.hotelLogin(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.CtripHotel@429bd883]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-01-22T20:54:17Z" finished-at="2018-01-22T20:54:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="hotelLogin(java.util.Map)[pri:0, instance:test.apptest.hotel.CtripHotel@429bd883]" name="hotelLogin" duration-ms="2" started-at="2018-01-22T20:54:17Z" description="hotelByYyf" data-provider="testData" finished-at="2018-01-22T20:54:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{result=上海, searchKeyWord=上海}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hotelLogin -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.CtripHotel@429bd883]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-01-22T20:54:17Z" finished-at="2018-01-22T20:54:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.CtripHotel.hotelLogin(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.CtripHotel@429bd883]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-01-22T20:54:17Z" finished-at="2018-01-22T20:54:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="hotelLogin(java.util.Map)[pri:0, instance:test.apptest.hotel.CtripHotel@429bd883]" name="hotelLogin" duration-ms="2" started-at="2018-01-22T20:54:17Z" description="hotelByYyf" data-provider="testData" finished-at="2018-01-22T20:54:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{result=北京, searchKeyWord=北京}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hotelLogin -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.CtripHotel@429bd883]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-01-22T20:54:17Z" finished-at="2018-01-22T20:54:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.CtripHotel.hotelLogin(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.CtripHotel@429bd883]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-01-22T20:54:17Z" finished-at="2018-01-22T20:54:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="hotelLogin(java.util.Map)[pri:0, instance:test.apptest.hotel.CtripHotel@429bd883]" name="hotelLogin" duration-ms="0" started-at="2018-01-22T20:54:17Z" description="hotelByYyf" data-provider="testData" finished-at="2018-01-22T20:54:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{result=上海, searchKeyWord=上海}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hotelLogin -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.CtripHotel@429bd883]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-01-22T20:54:17Z" finished-at="2018-01-22T20:54:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.CtripHotel.hotelLogin(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="hotelLogin(java.util.Map)[pri:0, instance:test.apptest.hotel.CtripHotel@429bd883]" name="hotelLogin" duration-ms="5" started-at="2018-01-22T20:54:17Z" description="hotelByYyf" data-provider="testData" finished-at="2018-01-22T20:54:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{result=北京, searchKeyWord=北京}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hotelLogin -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.CtripHotel@429bd883]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-01-22T20:54:17Z" finished-at="2018-01-22T20:54:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.CtripHotel@429bd883]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-01-22T20:54:17Z" finished-at="2018-01-22T20:54:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.CtripHotel.hotelLogin(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:test.apptest.hotel.CtripHotel@429bd883]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-01-22T20:54:17Z" finished-at="2018-01-22T20:54:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:test.apptest.hotel.CtripHotel@429bd883]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2018-01-22T20:54:17Z" finished-at="2018-01-22T20:54:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- test.apptest.hotel.CtripHotel -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
