<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="3" failed="4" total="24" passed="17">
  <reporter-output>
  </reporter-output>
  <suite name="HotelApp" duration-ms="1006850" started-at="2018-03-01T04:09:08Z" finished-at="2018-03-01T04:25:55Z">
    <groups>
      <group name="yyf">
        <method signature="HomeKeySearch.hotelSearch(java.util.Map)[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="hotelSearch" class="test.apptest.hotel.HomeKeySearch"/>
        <method signature="HomeKeySearch.recentSearches()[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="recentSearches" class="test.apptest.hotel.HomeKeySearch"/>
      </group> <!-- yyf -->
      <group name="Base">
        <method signature="FullRoomRate.districtFullRoomRate()[pri:0, instance:test.apptest.hotel.FullRoomRate@4445629]" name="districtFullRoomRate" class="test.apptest.hotel.FullRoomRate"/>
        <method signature="ListKeywordsSearch.listProvinceSearchBrand()[pri:0, instance:test.apptest.hotel.ListKeywordsSearch@27ae2fd0]" name="listProvinceSearchBrand" class="test.apptest.hotel.ListKeywordsSearch"/>
        <method signature="MyHotelOrder.MyHotelOrderGuest()[pri:0, instance:test.apptest.hotel.MyHotelOrder@12e61fe6]" name="MyHotelOrderGuest" class="test.apptest.hotel.MyHotelOrder"/>
        <method signature="MyHotelOrder.myHotelOrderTrip()[pri:0, instance:test.apptest.hotel.MyHotelOrder@12e61fe6]" name="myHotelOrderTrip" class="test.apptest.hotel.MyHotelOrder"/>
        <method signature="MyHotelOrder.noBookingsFound()[pri:0, instance:test.apptest.hotel.MyHotelOrder@12e61fe6]" name="noBookingsFound" class="test.apptest.hotel.MyHotelOrder"/>
        <method signature="SearchDomesticHotelName.SearchDomesticHotelName()[pri:0, instance:test.apptest.hotel.SearchDomesticHotelName@309e345f]" name="SearchDomesticHotelName" class="test.apptest.hotel.SearchDomesticHotelName"/>
        <method signature="SearchForDomesticAttractions.searchForDomesticAttractions()[pri:0, instance:test.apptest.hotel.SearchForDomesticAttractions@43301423]" name="searchForDomesticAttractions" class="test.apptest.hotel.SearchForDomesticAttractions"/>
        <method signature="SearchHotelInOverseasTrain.searchHotelInOverseasTrain()[pri:0, instance:test.apptest.hotel.SearchHotelInOverseasTrain@5dd6264]" name="searchHotelInOverseasTrain" class="test.apptest.hotel.SearchHotelInOverseasTrain"/>
        <method signature="SearchHotelOverseasProvince.SearchHotelOverseasProvince()[pri:0, instance:test.apptest.hotel.SearchHotelOverseasProvince@6193932a]" name="SearchHotelOverseasProvince" class="test.apptest.hotel.SearchHotelOverseasProvince"/>
        <method signature="SearchOverseasHotelName.HkSearchEn()[pri:0, instance:test.apptest.hotel.SearchOverseasHotelName@12b0404f]" name="HkSearchEn" class="test.apptest.hotel.SearchOverseasHotelName"/>
        <method signature="SearchOverseasHotelName.SearchOverseasHotelName()[pri:0, instance:test.apptest.hotel.SearchOverseasHotelName@12b0404f]" name="SearchOverseasHotelName" class="test.apptest.hotel.SearchOverseasHotelName"/>
        <method signature="StarSearch.Star345Search()[pri:0, instance:test.apptest.hotel.StarSearch@d4342c2]" name="Star345Search" class="test.apptest.hotel.StarSearch"/>
        <method signature="StarSearch.defaultStarSearch()[pri:0, instance:test.apptest.hotel.StarSearch@d4342c2]" name="defaultStarSearch" class="test.apptest.hotel.StarSearch"/>
        <method signature="StarSearch.starSearch()[pri:0, instance:test.apptest.hotel.StarSearch@d4342c2]" name="starSearch" class="test.apptest.hotel.StarSearch"/>
        <method signature="StarSearch.twostarSearch()[pri:0, instance:test.apptest.hotel.StarSearch@d4342c2]" name="twostarSearch" class="test.apptest.hotel.StarSearch"/>
      </group> <!-- Base -->
    </groups>
    <test name="HotelHomePage" duration-ms="1006816" started-at="2018-03-01T04:09:08Z" finished-at="2018-03-01T04:25:55Z">
      <class name="test.apptest.hotel.MyHotelOrder">
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:test.apptest.hotel.MyHotelOrder@12e61fe6]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="2" started-at="2018-03-01T12:23:50Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-03-01T12:23:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:test.apptest.hotel.MyHotelOrder@12e61fe6]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2018-03-01T12:23:50Z" finished-at="2018-03-01T12:23:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.apptest.hotel.MyHotelOrder@12e61fe6]" name="beforeClass" is-config="true" duration-ms="19284" started-at="2018-03-01T12:23:50Z" finished-at="2018-03-01T12:24:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.MyHotelOrder@12e61fe6]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-03-01T12:24:09Z" finished-at="2018-03-01T12:24:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.MyHotelOrder.MyHotelOrderGuest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="FAIL" signature="MyHotelOrderGuest()[pri:0, instance:test.apptest.hotel.MyHotelOrder@12e61fe6]" name="MyHotelOrderGuest" duration-ms="105494" started-at="2018-03-01T12:24:09Z" description="By sxm : C1309650 酒店订单/历史订单与订单详情页的跳转联动（快速预订用户）" finished-at="2018-03-01T12:25:54Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Timed out after 60 seconds waiting for element to be clickable: By.id: hotel_rooms_list_main_room_root_container
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities [{appPackage=ctrip.english, noReset=true, deviceName=127.0.0.1:62025, platform=LINUX, deviceUDID=127.0.0.1:62025, desired={appPackage=ctrip.english, appActivity=com.ctrip.ibu.myctrip.main.module.home.IBUHomeActivity, noReset=true, noSign=true, newCommandTimeout=10, platformVersion=null, browserName=, unicodeKeyboard=true, platformName=Android, deviceName=Android Emulator, resetKeyboard=true, autoAcceptAlerts=True}, newCommandTimeout=10, platformVersion=5.1.1, webStorageEnabled=false, takesScreenshot=true, browserName=, javascriptEnabled=true, unicodeKeyboard=true, platformName=Android, deviceManufacturer=Xiaomi, resetKeyboard=true, deviceScreenSize=720x1280, networkConnectionEnabled=true, noSign=true, warnings={}, databaseEnabled=false, appActivity=com.ctrip.ibu.myctrip.main.module.home.IBUHomeActivity, locationContextEnabled=false, deviceModel=MI 6, autoAcceptAlerts=True}]
Session ID: d84190dd-3571-4e04-8c9d-c60316a33608]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Timed out after 60 seconds waiting for element to be clickable: By.id: hotel_rooms_list_main_room_root_container
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities [{appPackage=ctrip.english, noReset=true, deviceName=127.0.0.1:62025, platform=LINUX, deviceUDID=127.0.0.1:62025, desired={appPackage=ctrip.english, appActivity=com.ctrip.ibu.myctrip.main.module.home.IBUHomeActivity, noReset=true, noSign=true, newCommandTimeout=10, platformVersion=null, browserName=, unicodeKeyboard=true, platformName=Android, deviceName=Android Emulator, resetKeyboard=true, autoAcceptAlerts=True}, newCommandTimeout=10, platformVersion=5.1.1, webStorageEnabled=false, takesScreenshot=true, browserName=, javascriptEnabled=true, unicodeKeyboard=true, platformName=Android, deviceManufacturer=Xiaomi, resetKeyboard=true, deviceScreenSize=720x1280, networkConnectionEnabled=true, noSign=true, warnings={}, databaseEnabled=false, appActivity=com.ctrip.ibu.myctrip.main.module.home.IBUHomeActivity, locationContextEnabled=false, deviceModel=MI 6, autoAcceptAlerts=True}]
Session ID: d84190dd-3571-4e04-8c9d-c60316a33608
	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:80)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:261)
	at test.apptest.hotel.MyHotelOrder.MyHotelOrderGuest(MyHotelOrder.java:135)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:175)
	at sun.reflect.GeneratedMethodAccessor18.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
Caused by: org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters. (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 76 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities [{appPackage=ctrip.english, noReset=true, deviceName=127.0.0.1:62025, platform=LINUX, deviceUDID=127.0.0.1:62025, desired={appPackage=ctrip.english, appActivity=com.ctrip.ibu.myctrip.main.module.home.IBUHomeActivity, noReset=true, noSign=true, newCommandTimeout=10, platformVersion=null, browserName=, unicodeKeyboard=true, platformName=Android, deviceName=Android Emulator, resetKeyboard=true, autoAcceptAlerts=True}, newCommandTimeout=10, platformVersion=5.1.1, webStorageEnabled=false, takesScreenshot=true, browserName=, javascriptEnabled=true, unicodeKeyboard=true, platformName=Android, deviceManufacturer=Xiaomi, resetKeyboard=true, deviceScreenSize=720x1280, networkConnectionEnabled=true, noSign=true, warnings={}, databaseEnabled=false, appActivity=com.ctrip.ibu.myctrip.main.module.home.IBUHomeActivity, locationContextEnabled=false, deviceModel=MI 6, autoAcceptAlerts=True}]
Session ID: d84190dd-3571-4e04-8c9d-c60316a33608
*** Element info: {Using=id, value=hotel_rooms_list_main_room_root_container}
	at sun.reflect.GeneratedConstructorAccessor21.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:40)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)
	at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:56)
	at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:413)
	at io.appium.java_client.DefaultGenericMobileDriver.findElementById(DefaultGenericMobileDriver.java:64)
	at io.appium.java_client.AppiumDriver.findElementById(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.findElementById(AndroidDriver.java:1)
	at org.openqa.selenium.By$ById.findElement(By.java:218)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
	at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:52)
	at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
	at org.openqa.selenium.support.ui.ExpectedConditions.findElement(ExpectedConditions.java:899)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:41)
	at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:205)
	at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:201)
	at org.openqa.selenium.support.ui.ExpectedConditions$22.apply(ExpectedConditions.java:653)
	at org.openqa.selenium.support.ui.ExpectedConditions$22.apply(ExpectedConditions.java:646)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:238)
	... 31 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MyHotelOrderGuest -->
        <test-method status="FAIL" signature="afterTest()[pri:0, instance:test.apptest.hotel.MyHotelOrder@12e61fe6]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-03-01T12:25:54Z" finished-at="2018-03-01T12:25:54Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[An element could not be located on the page using the given search parameters. (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 59 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities [{appPackage=ctrip.english, noReset=true, deviceName=127.0.0.1:62025, platform=LINUX, deviceUDID=127.0.0.1:62025, desired={appPackage=ctrip.english, appActivity=com.ctrip.ibu.myctrip.main.module.home.IBUHomeActivity, noReset=true, noSign=true, newCommandTimeout=10, platformVersion=null, browserName=, unicodeKeyboard=true, platformName=Android, deviceName=Android Emulator, resetKeyboard=true, autoAcceptAlerts=True}, newCommandTimeout=10, platformVersion=5.1.1, webStorageEnabled=false, takesScreenshot=true, browserName=, javascriptEnabled=true, unicodeKeyboard=true, platformName=Android, deviceManufacturer=Xiaomi, resetKeyboard=true, deviceScreenSize=720x1280, networkConnectionEnabled=true, noSign=true, warnings={}, databaseEnabled=false, appActivity=com.ctrip.ibu.myctrip.main.module.home.IBUHomeActivity, locationContextEnabled=false, deviceModel=MI 6, autoAcceptAlerts=True}]
Session ID: d84190dd-3571-4e04-8c9d-c60316a33608
*** Element info: {Using=class name, value=android.widget.ImageButton}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters. (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 59 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities [{appPackage=ctrip.english, noReset=true, deviceName=127.0.0.1:62025, platform=LINUX, deviceUDID=127.0.0.1:62025, desired={appPackage=ctrip.english, appActivity=com.ctrip.ibu.myctrip.main.module.home.IBUHomeActivity, noReset=true, noSign=true, newCommandTimeout=10, platformVersion=null, browserName=, unicodeKeyboard=true, platformName=Android, deviceName=Android Emulator, resetKeyboard=true, autoAcceptAlerts=True}, newCommandTimeout=10, platformVersion=5.1.1, webStorageEnabled=false, takesScreenshot=true, browserName=, javascriptEnabled=true, unicodeKeyboard=true, platformName=Android, deviceManufacturer=Xiaomi, resetKeyboard=true, deviceScreenSize=720x1280, networkConnectionEnabled=true, noSign=true, warnings={}, databaseEnabled=false, appActivity=com.ctrip.ibu.myctrip.main.module.home.IBUHomeActivity, locationContextEnabled=false, deviceModel=MI 6, autoAcceptAlerts=True}]
Session ID: d84190dd-3571-4e04-8c9d-c60316a33608
*** Element info: {Using=class name, value=android.widget.ImageButton}
	at sun.reflect.GeneratedConstructorAccessor21.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:40)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)
	at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:56)
	at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByClassName(RemoteWebDriver.java:477)
	at io.appium.java_client.DefaultGenericMobileDriver.findElementByClassName(DefaultGenericMobileDriver.java:112)
	at io.appium.java_client.AppiumDriver.findElementByClassName(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.findElementByClassName(AndroidDriver.java:1)
	at org.openqa.selenium.By$ByClassName.findElement(By.java:391)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
	at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:52)
	at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
	at test.apptest.hotel.MyHotelOrder.afterTest(MyHotelOrder.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:786)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.MyHotelOrder@12e61fe6]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-03-01T12:25:55Z" finished-at="2018-03-01T12:25:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.MyHotelOrder.MyHotelOrderGuest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.MyHotelOrder@12e61fe6]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-03-01T12:25:55Z" finished-at="2018-03-01T12:25:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="myHotelOrderTrip()[pri:0, instance:test.apptest.hotel.MyHotelOrder@12e61fe6]" name="myHotelOrderTrip" duration-ms="1" started-at="2018-03-01T12:25:55Z" description="By sxm : C1309650 酒店订单/历史订单与订单详情页的跳转联动（ctrip用户）" finished-at="2018-03-01T12:25:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myHotelOrderTrip -->
        <test-method status="SKIP" signature="afterTest()[pri:0, instance:test.apptest.hotel.MyHotelOrder@12e61fe6]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-03-01T12:25:55Z" finished-at="2018-03-01T12:25:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.MyHotelOrder@12e61fe6]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-03-01T12:25:55Z" finished-at="2018-03-01T12:25:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.MyHotelOrder.myHotelOrderTrip() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.MyHotelOrder@12e61fe6]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-03-01T12:25:55Z" finished-at="2018-03-01T12:25:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="noBookingsFound()[pri:0, instance:test.apptest.hotel.MyHotelOrder@12e61fe6]" name="noBookingsFound" duration-ms="0" started-at="2018-03-01T12:25:55Z" description="by lnn: 无任何酒店订单/历史订单记录，卡片展示（快速预订用户和ctrip用户）C1309653" finished-at="2018-03-01T12:25:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noBookingsFound -->
        <test-method status="SKIP" signature="afterTest()[pri:0, instance:test.apptest.hotel.MyHotelOrder@12e61fe6]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-03-01T12:25:55Z" finished-at="2018-03-01T12:25:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:test.apptest.hotel.MyHotelOrder@12e61fe6]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-03-01T12:25:55Z" finished-at="2018-03-01T12:25:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.MyHotelOrder@12e61fe6]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-03-01T12:25:55Z" finished-at="2018-03-01T12:25:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.MyHotelOrder.noBookingsFound() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:test.apptest.hotel.MyHotelOrder@12e61fe6]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2018-03-01T12:25:55Z" finished-at="2018-03-01T12:25:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- test.apptest.hotel.MyHotelOrder -->
      <class name="test.apptest.hotel.SearchDomesticHotelName">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:test.apptest.hotel.SearchDomesticHotelName@309e345f]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2018-03-01T12:20:05Z" finished-at="2018-03-01T12:20:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:test.apptest.hotel.SearchDomesticHotelName@309e345f]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="3" started-at="2018-03-01T12:20:05Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-03-01T12:20:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.apptest.hotel.SearchDomesticHotelName@309e345f]" name="beforeClass" is-config="true" duration-ms="14778" started-at="2018-03-01T12:20:05Z" finished-at="2018-03-01T12:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.SearchDomesticHotelName@309e345f]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="5" started-at="2018-03-01T12:20:20Z" finished-at="2018-03-01T12:20:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.SearchDomesticHotelName.SearchDomesticHotelName() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="SearchDomesticHotelName()[pri:0, instance:test.apptest.hotel.SearchDomesticHotelName@309e345f]" name="SearchDomesticHotelName" duration-ms="81740" started-at="2018-03-01T12:20:20Z" description="by chr: 搜索国内酒店名称C1309603" finished-at="2018-03-01T12:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchDomesticHotelName -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.SearchDomesticHotelName@309e345f]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-03-01T12:21:42Z" finished-at="2018-03-01T12:21:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.SearchDomesticHotelName.SearchDomesticHotelName() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.apptest.hotel.SearchDomesticHotelName@309e345f]" name="afterClass" is-config="true" duration-ms="4852" started-at="2018-03-01T12:21:42Z" finished-at="2018-03-01T12:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:test.apptest.hotel.SearchDomesticHotelName@309e345f]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2018-03-01T12:21:47Z" finished-at="2018-03-01T12:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- test.apptest.hotel.SearchDomesticHotelName -->
      <class name="test.apptest.hotel.ListKeywordsSearch">
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:test.apptest.hotel.ListKeywordsSearch@27ae2fd0]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2018-03-01T12:25:55Z" finished-at="2018-03-01T12:25:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:test.apptest.hotel.ListKeywordsSearch@27ae2fd0]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2018-03-01T12:25:55Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-03-01T12:25:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="beforeClass()[pri:0, instance:test.apptest.hotel.ListKeywordsSearch@27ae2fd0]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-03-01T12:25:55Z" finished-at="2018-03-01T12:25:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="listProvinceSearchBrand()[pri:0, instance:test.apptest.hotel.ListKeywordsSearch@27ae2fd0]" name="listProvinceSearchBrand" duration-ms="0" started-at="2018-03-01T12:25:55Z" description="By sxm : C1309690	海外省和景点下的品牌搜索" finished-at="2018-03-01T12:25:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listProvinceSearchBrand -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.ListKeywordsSearch@27ae2fd0]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-03-01T12:25:55Z" finished-at="2018-03-01T12:25:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:test.apptest.hotel.ListKeywordsSearch@27ae2fd0]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2018-03-01T12:25:55Z" finished-at="2018-03-01T12:25:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.ListKeywordsSearch@27ae2fd0]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-03-01T12:25:55Z" finished-at="2018-03-01T12:25:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.ListKeywordsSearch.listProvinceSearchBrand() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:test.apptest.hotel.ListKeywordsSearch@27ae2fd0]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-03-01T12:25:55Z" finished-at="2018-03-01T12:25:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- test.apptest.hotel.ListKeywordsSearch -->
      <class name="test.apptest.hotel.FullRoomRate">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:test.apptest.hotel.FullRoomRate@4445629]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2018-03-01T12:15:04Z" finished-at="2018-03-01T12:15:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:test.apptest.hotel.FullRoomRate@4445629]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="2" started-at="2018-03-01T12:15:04Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-03-01T12:15:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.apptest.hotel.FullRoomRate@4445629]" name="beforeClass" is-config="true" duration-ms="18153" started-at="2018-03-01T12:15:04Z" finished-at="2018-03-01T12:15:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.FullRoomRate@4445629]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="2" started-at="2018-03-01T12:15:22Z" finished-at="2018-03-01T12:15:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.FullRoomRate.districtFullRoomRate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="districtFullRoomRate()[pri:0, instance:test.apptest.hotel.FullRoomRate@4445629]" name="districtFullRoomRate" duration-ms="22279" started-at="2018-03-01T12:15:22Z" description="by lnn: 测试区域满房度C1306883/C1315188" finished-at="2018-03-01T12:15:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- districtFullRoomRate -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.FullRoomRate@4445629]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="2" started-at="2018-03-01T12:15:44Z" finished-at="2018-03-01T12:15:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.FullRoomRate.districtFullRoomRate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.apptest.hotel.FullRoomRate@4445629]" name="afterClass" is-config="true" duration-ms="4791" started-at="2018-03-01T12:15:44Z" finished-at="2018-03-01T12:15:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:test.apptest.hotel.FullRoomRate@4445629]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2018-03-01T12:15:49Z" finished-at="2018-03-01T12:15:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- test.apptest.hotel.FullRoomRate -->
      <class name="test.apptest.hotel.SearchForDomesticAttractions">
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:test.apptest.hotel.SearchForDomesticAttractions@43301423]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="2" started-at="2018-03-01T12:15:49Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-03-01T12:15:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:test.apptest.hotel.SearchForDomesticAttractions@43301423]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2018-03-01T12:15:49Z" finished-at="2018-03-01T12:15:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.apptest.hotel.SearchForDomesticAttractions@43301423]" name="beforeClass" is-config="true" duration-ms="16604" started-at="2018-03-01T12:15:49Z" finished-at="2018-03-01T12:16:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.SearchForDomesticAttractions@43301423]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-03-01T12:16:06Z" finished-at="2018-03-01T12:16:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.SearchForDomesticAttractions.searchForDomesticAttractions() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="searchForDomesticAttractions()[pri:0, instance:test.apptest.hotel.SearchForDomesticAttractions@43301423]" name="searchForDomesticAttractions" duration-ms="24012" started-at="2018-03-01T12:16:06Z" description="by lnn: 搜索国内区域景点C1309606" finished-at="2018-03-01T12:16:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchForDomesticAttractions -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.SearchForDomesticAttractions@43301423]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-03-01T12:16:30Z" finished-at="2018-03-01T12:16:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.SearchForDomesticAttractions.searchForDomesticAttractions() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.apptest.hotel.SearchForDomesticAttractions@43301423]" name="afterClass" is-config="true" duration-ms="5079" started-at="2018-03-01T12:16:30Z" finished-at="2018-03-01T12:16:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:test.apptest.hotel.SearchForDomesticAttractions@43301423]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2018-03-01T12:16:35Z" finished-at="2018-03-01T12:16:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- test.apptest.hotel.SearchForDomesticAttractions -->
      <class name="test.apptest.hotel.SearchHotelOverseasProvince">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:test.apptest.hotel.SearchHotelOverseasProvince@6193932a]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2018-03-01T12:23:05Z" finished-at="2018-03-01T12:23:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:test.apptest.hotel.SearchHotelOverseasProvince@6193932a]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="1" started-at="2018-03-01T12:23:05Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-03-01T12:23:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.apptest.hotel.SearchHotelOverseasProvince@6193932a]" name="beforeClass" is-config="true" duration-ms="15217" started-at="2018-03-01T12:23:05Z" finished-at="2018-03-01T12:23:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.SearchHotelOverseasProvince@6193932a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-03-01T12:23:20Z" finished-at="2018-03-01T12:23:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.SearchHotelOverseasProvince.SearchHotelOverseasProvince() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="SearchHotelOverseasProvince()[pri:0, instance:test.apptest.hotel.SearchHotelOverseasProvince@6193932a]" name="SearchHotelOverseasProvince" duration-ms="25272" started-at="2018-03-01T12:23:20Z" description="by chr: 根据海外省或城市搜索酒店C1309610" finished-at="2018-03-01T12:23:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchHotelOverseasProvince -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.SearchHotelOverseasProvince@6193932a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="2" started-at="2018-03-01T12:23:45Z" finished-at="2018-03-01T12:23:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.SearchHotelOverseasProvince.SearchHotelOverseasProvince() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.apptest.hotel.SearchHotelOverseasProvince@6193932a]" name="afterClass" is-config="true" duration-ms="4682" started-at="2018-03-01T12:23:45Z" finished-at="2018-03-01T12:23:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:test.apptest.hotel.SearchHotelOverseasProvince@6193932a]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2018-03-01T12:23:50Z" finished-at="2018-03-01T12:23:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- test.apptest.hotel.SearchHotelOverseasProvince -->
      <class name="test.apptest.hotel.SearchHotelInOverseasTrain">
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:test.apptest.hotel.SearchHotelInOverseasTrain@5dd6264]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="2" started-at="2018-03-01T12:16:35Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-03-01T12:16:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:test.apptest.hotel.SearchHotelInOverseasTrain@5dd6264]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2018-03-01T12:16:35Z" finished-at="2018-03-01T12:16:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.apptest.hotel.SearchHotelInOverseasTrain@5dd6264]" name="beforeClass" is-config="true" duration-ms="15242" started-at="2018-03-01T12:16:35Z" finished-at="2018-03-01T12:16:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.SearchHotelInOverseasTrain@5dd6264]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="2" started-at="2018-03-01T12:16:50Z" finished-at="2018-03-01T12:16:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.SearchHotelInOverseasTrain.searchHotelInOverseasTrain() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="FAIL" signature="searchHotelInOverseasTrain()[pri:0, instance:test.apptest.hotel.SearchHotelInOverseasTrain@5dd6264]" name="searchHotelInOverseasTrain" duration-ms="14400" started-at="2018-03-01T12:16:50Z" description="by lnn: 根据海外火车站搜索酒店C1309613" finished-at="2018-03-01T12:17:05Z">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index: 1, Size: 1]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index: 1, Size: 1
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)
	at java.util.ArrayList.get(ArrayList.java:429)
	at test.apptest.hotel.SearchHotelInOverseasTrain.searchHotelInOverseasTrain(SearchHotelInOverseasTrain.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchHotelInOverseasTrain -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.SearchHotelInOverseasTrain@5dd6264]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-03-01T12:17:05Z" finished-at="2018-03-01T12:17:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.SearchHotelInOverseasTrain.searchHotelInOverseasTrain() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.apptest.hotel.SearchHotelInOverseasTrain@5dd6264]" name="afterClass" is-config="true" duration-ms="5300" started-at="2018-03-01T12:17:05Z" finished-at="2018-03-01T12:17:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:test.apptest.hotel.SearchHotelInOverseasTrain@5dd6264]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2018-03-01T12:17:10Z" finished-at="2018-03-01T12:17:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- test.apptest.hotel.SearchHotelInOverseasTrain -->
      <class name="test.apptest.hotel.StarSearch">
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:test.apptest.hotel.StarSearch@d4342c2]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="2" started-at="2018-03-01T12:17:10Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-03-01T12:17:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:test.apptest.hotel.StarSearch@d4342c2]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2018-03-01T12:17:10Z" finished-at="2018-03-01T12:17:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.apptest.hotel.StarSearch@d4342c2]" name="beforeClass" is-config="true" duration-ms="15314" started-at="2018-03-01T12:17:10Z" finished-at="2018-03-01T12:17:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.StarSearch@d4342c2]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-03-01T12:17:25Z" finished-at="2018-03-01T12:17:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.StarSearch.Star345Search() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="Star345Search()[pri:0, instance:test.apptest.hotel.StarSearch@d4342c2]" name="Star345Search" duration-ms="37039" started-at="2018-03-01T12:17:25Z" description="by ylf: C1309632	星级为3,4,5搜索" finished-at="2018-03-01T12:18:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Star345Search -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:test.apptest.hotel.StarSearch@d4342c2]" name="afterTest" is-config="true" duration-ms="2020" started-at="2018-03-01T12:18:02Z" finished-at="2018-03-01T12:18:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.StarSearch@d4342c2]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-03-01T12:18:04Z" finished-at="2018-03-01T12:18:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.StarSearch.Star345Search() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.StarSearch@d4342c2]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="2" started-at="2018-03-01T12:18:04Z" finished-at="2018-03-01T12:18:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.StarSearch.defaultStarSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="defaultStarSearch()[pri:0, instance:test.apptest.hotel.StarSearch@d4342c2]" name="defaultStarSearch" duration-ms="50503" started-at="2018-03-01T12:18:04Z" description="by ylf: C1309627	默认价格搜索，默认星级" finished-at="2018-03-01T12:18:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultStarSearch -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:test.apptest.hotel.StarSearch@d4342c2]" name="afterTest" is-config="true" duration-ms="4103" started-at="2018-03-01T12:18:55Z" finished-at="2018-03-01T12:18:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.StarSearch@d4342c2]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-03-01T12:18:59Z" finished-at="2018-03-01T12:18:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.StarSearch.defaultStarSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.StarSearch@d4342c2]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-03-01T12:18:59Z" finished-at="2018-03-01T12:18:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.StarSearch.starSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="starSearch()[pri:0, instance:test.apptest.hotel.StarSearch@d4342c2]" name="starSearch" duration-ms="27609" started-at="2018-03-01T12:18:59Z" description="by lnn: 星级为3星或者4星或者5星搜索C1309631" finished-at="2018-03-01T12:19:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- starSearch -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:test.apptest.hotel.StarSearch@d4342c2]" name="afterTest" is-config="true" duration-ms="4729" started-at="2018-03-01T12:19:27Z" finished-at="2018-03-01T12:19:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.StarSearch@d4342c2]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-03-01T12:19:31Z" finished-at="2018-03-01T12:19:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.StarSearch.starSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.StarSearch@d4342c2]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="2" started-at="2018-03-01T12:19:31Z" finished-at="2018-03-01T12:19:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.StarSearch.twostarSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="twostarSearch()[pri:0, instance:test.apptest.hotel.StarSearch@d4342c2]" name="twostarSearch" duration-ms="27664" started-at="2018-03-01T12:19:31Z" description="by sxm: C1309630星级分别为&lt;=2星搜索" finished-at="2018-03-01T12:19:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- twostarSearch -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:test.apptest.hotel.StarSearch@d4342c2]" name="afterTest" is-config="true" duration-ms="2814" started-at="2018-03-01T12:19:59Z" finished-at="2018-03-01T12:20:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.StarSearch@d4342c2]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-03-01T12:20:02Z" finished-at="2018-03-01T12:20:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.StarSearch.twostarSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.apptest.hotel.StarSearch@d4342c2]" name="afterClass" is-config="true" duration-ms="3425" started-at="2018-03-01T12:20:02Z" finished-at="2018-03-01T12:20:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:test.apptest.hotel.StarSearch@d4342c2]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2018-03-01T12:20:05Z" finished-at="2018-03-01T12:20:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- test.apptest.hotel.StarSearch -->
      <class name="test.apptest.hotel.SearchOverseasHotelName">
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:test.apptest.hotel.SearchOverseasHotelName@12b0404f]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="2" started-at="2018-03-01T12:21:47Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-03-01T12:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:test.apptest.hotel.SearchOverseasHotelName@12b0404f]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2018-03-01T12:21:47Z" finished-at="2018-03-01T12:21:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.apptest.hotel.SearchOverseasHotelName@12b0404f]" name="beforeClass" is-config="true" duration-ms="16295" started-at="2018-03-01T12:21:47Z" finished-at="2018-03-01T12:22:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.SearchOverseasHotelName@12b0404f]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-03-01T12:22:03Z" finished-at="2018-03-01T12:22:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.SearchOverseasHotelName.HkSearchEn() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="HkSearchEn()[pri:0, instance:test.apptest.hotel.SearchOverseasHotelName@12b0404f]" name="HkSearchEn" duration-ms="26511" started-at="2018-03-01T12:22:03Z" description="by chr: 中文输入英文酒店名称搜索C1309624" finished-at="2018-03-01T12:22:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- HkSearchEn -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.SearchOverseasHotelName@12b0404f]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-03-01T12:22:29Z" finished-at="2018-03-01T12:22:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.SearchOverseasHotelName.HkSearchEn() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.SearchOverseasHotelName@12b0404f]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-03-01T12:22:29Z" finished-at="2018-03-01T12:22:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.SearchOverseasHotelName.SearchOverseasHotelName() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="FAIL" signature="SearchOverseasHotelName()[pri:0, instance:test.apptest.hotel.SearchOverseasHotelName@12b0404f]" name="SearchOverseasHotelName" duration-ms="30361" started-at="2018-03-01T12:22:29Z" description="by chr: 根据海外酒店名称搜索酒店C1309616" finished-at="2018-03-01T12:23:00Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Timed out after 30 seconds waiting for element to be clickable: By.id: myctrip_hotel_icon
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities [{appPackage=ctrip.english, noReset=true, deviceName=127.0.0.1:62025, platform=LINUX, deviceUDID=127.0.0.1:62025, desired={appPackage=ctrip.english, appActivity=com.ctrip.ibu.myctrip.main.module.home.IBUHomeActivity, noReset=true, noSign=true, newCommandTimeout=10, platformVersion=null, browserName=, unicodeKeyboard=true, platformName=Android, deviceName=Android Emulator, resetKeyboard=true, autoAcceptAlerts=True}, newCommandTimeout=10, platformVersion=5.1.1, webStorageEnabled=false, takesScreenshot=true, browserName=, javascriptEnabled=true, unicodeKeyboard=true, platformName=Android, deviceManufacturer=Xiaomi, resetKeyboard=true, deviceScreenSize=720x1280, networkConnectionEnabled=true, noSign=true, warnings={}, databaseEnabled=false, appActivity=com.ctrip.ibu.myctrip.main.module.home.IBUHomeActivity, locationContextEnabled=false, deviceModel=MI 6, autoAcceptAlerts=True}]
Session ID: e513973a-0e91-439a-a3bf-1416d248e8f4]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Timed out after 30 seconds waiting for element to be clickable: By.id: myctrip_hotel_icon
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities [{appPackage=ctrip.english, noReset=true, deviceName=127.0.0.1:62025, platform=LINUX, deviceUDID=127.0.0.1:62025, desired={appPackage=ctrip.english, appActivity=com.ctrip.ibu.myctrip.main.module.home.IBUHomeActivity, noReset=true, noSign=true, newCommandTimeout=10, platformVersion=null, browserName=, unicodeKeyboard=true, platformName=Android, deviceName=Android Emulator, resetKeyboard=true, autoAcceptAlerts=True}, newCommandTimeout=10, platformVersion=5.1.1, webStorageEnabled=false, takesScreenshot=true, browserName=, javascriptEnabled=true, unicodeKeyboard=true, platformName=Android, deviceManufacturer=Xiaomi, resetKeyboard=true, deviceScreenSize=720x1280, networkConnectionEnabled=true, noSign=true, warnings={}, databaseEnabled=false, appActivity=com.ctrip.ibu.myctrip.main.module.home.IBUHomeActivity, locationContextEnabled=false, deviceModel=MI 6, autoAcceptAlerts=True}]
Session ID: e513973a-0e91-439a-a3bf-1416d248e8f4
	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:80)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:261)
	at test.apptest.hotel.SearchOverseasHotelName.SearchOverseasHotelName(SearchOverseasHotelName.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:175)
	at sun.reflect.GeneratedMethodAccessor18.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
Caused by: org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters. (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 81 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities [{appPackage=ctrip.english, noReset=true, deviceName=127.0.0.1:62025, platform=LINUX, deviceUDID=127.0.0.1:62025, desired={appPackage=ctrip.english, appActivity=com.ctrip.ibu.myctrip.main.module.home.IBUHomeActivity, noReset=true, noSign=true, newCommandTimeout=10, platformVersion=null, browserName=, unicodeKeyboard=true, platformName=Android, deviceName=Android Emulator, resetKeyboard=true, autoAcceptAlerts=True}, newCommandTimeout=10, platformVersion=5.1.1, webStorageEnabled=false, takesScreenshot=true, browserName=, javascriptEnabled=true, unicodeKeyboard=true, platformName=Android, deviceManufacturer=Xiaomi, resetKeyboard=true, deviceScreenSize=720x1280, networkConnectionEnabled=true, noSign=true, warnings={}, databaseEnabled=false, appActivity=com.ctrip.ibu.myctrip.main.module.home.IBUHomeActivity, locationContextEnabled=false, deviceModel=MI 6, autoAcceptAlerts=True}]
Session ID: e513973a-0e91-439a-a3bf-1416d248e8f4
*** Element info: {Using=id, value=myctrip_hotel_icon}
	at sun.reflect.GeneratedConstructorAccessor21.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:40)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)
	at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:56)
	at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:413)
	at io.appium.java_client.DefaultGenericMobileDriver.findElementById(DefaultGenericMobileDriver.java:64)
	at io.appium.java_client.AppiumDriver.findElementById(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.findElementById(AndroidDriver.java:1)
	at org.openqa.selenium.By$ById.findElement(By.java:218)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
	at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:52)
	at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
	at org.openqa.selenium.support.ui.ExpectedConditions.findElement(ExpectedConditions.java:899)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:41)
	at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:205)
	at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:201)
	at org.openqa.selenium.support.ui.ExpectedConditions$22.apply(ExpectedConditions.java:653)
	at org.openqa.selenium.support.ui.ExpectedConditions$22.apply(ExpectedConditions.java:646)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:238)
	... 31 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchOverseasHotelName -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.SearchOverseasHotelName@12b0404f]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-03-01T12:23:00Z" finished-at="2018-03-01T12:23:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.SearchOverseasHotelName.SearchOverseasHotelName() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.apptest.hotel.SearchOverseasHotelName@12b0404f]" name="afterClass" is-config="true" duration-ms="4796" started-at="2018-03-01T12:23:00Z" finished-at="2018-03-01T12:23:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:test.apptest.hotel.SearchOverseasHotelName@12b0404f]" name="springTestContextAfterTestClass" is-config="true" duration-ms="1" started-at="2018-03-01T12:23:05Z" finished-at="2018-03-01T12:23:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- test.apptest.hotel.SearchOverseasHotelName -->
      <class name="test.apptest.hotel.HomeKeySearch">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="5" started-at="2018-03-01T12:09:08Z" finished-at="2018-03-01T12:09:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="562" started-at="2018-03-01T12:09:08Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-03-01T12:09:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-03-01T12:09:08Z" finished-at="2018-03-01T12:09:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="233" started-at="2018-03-01T12:09:08Z" finished-at="2018-03-01T12:09:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.HomeKeySearch.hotelSearch(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="hotelSearch(java.util.Map)[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="hotelSearch" duration-ms="38183" started-at="2018-03-01T12:09:09Z" description="yefei.yang" data-provider="testData" finished-at="2018-03-01T12:09:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{result=上海, id=C1309602 目的地搜索国内城市名, version=6.2, searchKeyWord=上海}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hotelSearch -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="afterMethod" is-config="true" duration-ms="4043" started-at="2018-03-01T12:09:47Z" finished-at="2018-03-01T12:09:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="2" started-at="2018-03-01T12:09:51Z" finished-at="2018-03-01T12:09:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.HomeKeySearch.hotelSearch(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="2" started-at="2018-03-01T12:09:51Z" finished-at="2018-03-01T12:09:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.HomeKeySearch.hotelSearch(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="hotelSearch(java.util.Map)[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="hotelSearch" duration-ms="33876" started-at="2018-03-01T12:09:51Z" description="yefei.yang" data-provider="testData" finished-at="2018-03-01T12:10:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{result=虹橋火車站, id=C1309608 国内火车站搜索酒店, version=6.2, searchKeyWord=上海虹桥火车站}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hotelSearch -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="afterMethod" is-config="true" duration-ms="3665" started-at="2018-03-01T12:10:25Z" finished-at="2018-03-01T12:10:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-03-01T12:10:28Z" finished-at="2018-03-01T12:10:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.HomeKeySearch.hotelSearch(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-03-01T12:10:28Z" finished-at="2018-03-01T12:10:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.HomeKeySearch.hotelSearch(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="hotelSearch(java.util.Map)[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="hotelSearch" duration-ms="34978" started-at="2018-03-01T12:10:28Z" description="yefei.yang" data-provider="testData" finished-at="2018-03-01T12:11:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{result=上海虹橋元一希爾頓酒店, id=C1309615 当前城市搜索酒店, version=6.2, searchKeyWord=上海希尔顿}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hotelSearch -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="afterMethod" is-config="true" duration-ms="7027" started-at="2018-03-01T12:11:03Z" finished-at="2018-03-01T12:11:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-03-01T12:11:10Z" finished-at="2018-03-01T12:11:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.HomeKeySearch.hotelSearch(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-03-01T12:11:10Z" finished-at="2018-03-01T12:11:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.HomeKeySearch.hotelSearch(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="hotelSearch(java.util.Map)[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="hotelSearch" duration-ms="33158" started-at="2018-03-01T12:11:10Z" description="yefei.yang" data-provider="testData" finished-at="2018-03-01T12:11:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{result=東方明珠, id=C1309606 根据国内地标搜索酒店, version=6.2, searchKeyWord=东方明珠}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hotelSearch -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="afterMethod" is-config="true" duration-ms="3879" started-at="2018-03-01T12:11:44Z" finished-at="2018-03-01T12:11:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-03-01T12:11:47Z" finished-at="2018-03-01T12:11:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.HomeKeySearch.hotelSearch(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-03-01T12:11:47Z" finished-at="2018-03-01T12:11:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.HomeKeySearch.hotelSearch(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="FAIL" signature="hotelSearch(java.util.Map)[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="hotelSearch" duration-ms="36986" started-at="2018-03-01T12:11:47Z" description="yefei.yang" data-provider="testData" finished-at="2018-03-01T12:12:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{result=聖淘沙島, id=C1309614 根据海外商圈搜索酒店, version=6.2, searchKeyWord=圣淘沙岛}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected:<圣淘沙島> but was:<聖淘沙島>]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected:<圣淘沙島> but was:<聖淘沙島>
	at org.testng.AssertJUnit.assertEquals(AssertJUnit.java:101)
	at org.testng.AssertJUnit.assertEquals(AssertJUnit.java:108)
	at test.apptest.hotel.HomeKeySearch.hotelSearch(HomeKeySearch.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hotelSearch -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="afterMethod" is-config="true" duration-ms="5305" started-at="2018-03-01T12:12:24Z" finished-at="2018-03-01T12:12:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="2" started-at="2018-03-01T12:12:30Z" finished-at="2018-03-01T12:12:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.HomeKeySearch.hotelSearch(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-03-01T12:12:30Z" finished-at="2018-03-01T12:12:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.HomeKeySearch.hotelSearch(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="hotelSearch(java.util.Map)[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="hotelSearch" duration-ms="40088" started-at="2018-03-01T12:12:30Z" description="yefei.yang" data-provider="testData" finished-at="2018-03-01T12:13:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{result=上海浦東國際機場, id=C1309604 搜索国内机场, version=6.2, searchKeyWord=上海浦东国际机场}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hotelSearch -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="afterMethod" is-config="true" duration-ms="3608" started-at="2018-03-01T12:13:10Z" finished-at="2018-03-01T12:13:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="2" started-at="2018-03-01T12:13:13Z" finished-at="2018-03-01T12:13:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.HomeKeySearch.hotelSearch(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-03-01T12:13:13Z" finished-at="2018-03-01T12:13:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.HomeKeySearch.hotelSearch(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="hotelSearch(java.util.Map)[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="hotelSearch" duration-ms="39851" started-at="2018-03-01T12:13:13Z" description="yefei.yang" data-provider="testData" finished-at="2018-03-01T12:13:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{result=東京羽田國際機場, id=C1309612 根据海外机场搜索酒店, version=6.2, searchKeyWord=东京羽田国际机场}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hotelSearch -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="afterMethod" is-config="true" duration-ms="3837" started-at="2018-03-01T12:13:53Z" finished-at="2018-03-01T12:13:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-03-01T12:13:57Z" finished-at="2018-03-01T12:13:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.HomeKeySearch.hotelSearch(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="hotelSearch(java.util.Map)[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="hotelSearch" duration-ms="34751" started-at="2018-03-01T12:13:57Z" description="yefei.yang" data-provider="testData" finished-at="2018-03-01T12:14:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{result=曼谷杜莎夫人蠟像館, id=C1309617 根据海外地标筛选酒店功能, version=6.2, searchKeyWord=曼谷杜莎夫人蜡像馆}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hotelSearch -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-03-01T12:13:57Z" finished-at="2018-03-01T12:13:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.HomeKeySearch.hotelSearch(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="afterMethod" is-config="true" duration-ms="3795" started-at="2018-03-01T12:14:32Z" finished-at="2018-03-01T12:14:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-03-01T12:14:36Z" finished-at="2018-03-01T12:14:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.HomeKeySearch.hotelSearch(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-03-01T12:14:36Z" finished-at="2018-03-01T12:14:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.HomeKeySearch.recentSearches() throws java.net.MalformedURLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="recentSearches()[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="recentSearches" duration-ms="23277" started-at="2018-03-01T12:14:36Z" description="yefei.yang" finished-at="2018-03-01T12:14:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recentSearches -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="afterMethod" is-config="true" duration-ms="4973" started-at="2018-03-01T12:14:59Z" finished-at="2018-03-01T12:15:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="2" started-at="2018-03-01T12:15:04Z" finished-at="2018-03-01T12:15:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.HomeKeySearch.recentSearches() throws java.net.MalformedURLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2018-03-01T12:15:04Z" finished-at="2018-03-01T12:15:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.apptest.hotel.HomeKeySearch@63a65a25]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-03-01T12:15:04Z" finished-at="2018-03-01T12:15:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- test.apptest.hotel.HomeKeySearch -->
    </test> <!-- HotelHomePage -->
    <test name="HotelListPage" duration-ms="0" started-at="2018-03-01T04:25:55Z" finished-at="2018-03-01T04:25:55Z">
    </test> <!-- HotelListPage -->
    <test name="HotelDetailPage" duration-ms="0" started-at="2018-03-01T04:25:55Z" finished-at="2018-03-01T04:25:55Z">
    </test> <!-- HotelDetailPage -->
    <test name="HotelOrderPage" duration-ms="1" started-at="2018-03-01T04:25:55Z" finished-at="2018-03-01T04:25:55Z">
    </test> <!-- HotelOrderPage -->
  </suite> <!-- HotelApp -->
</testng-results>
