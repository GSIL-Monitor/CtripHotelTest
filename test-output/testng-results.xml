<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="31" failed="8" total="40" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="HotelApp" duration-ms="50041" started-at="2018-03-07T02:22:30Z" finished-at="2018-03-07T02:23:20Z">
    <groups>
      <group name="yyf">
        <method signature="HomeKeySearch.hotelSearch(java.util.Map)[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="hotelSearch" class="test.apptest.hotel.HomeKeySearch"/>
        <method signature="HomeKeySearch.recentSearches()[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="recentSearches" class="test.apptest.hotel.HomeKeySearch"/>
      </group> <!-- yyf -->
      <group name="Base">
        <method signature="AdultChildrenSearch.adultChildrenSearch()[pri:0, instance:test.apptest.hotel.AdultChildrenSearch@7219ec67]" name="adultChildrenSearch" class="test.apptest.hotel.AdultChildrenSearch"/>
        <method signature="AdultChildrenSearch.twoadultOneAdultChildrenSearch()[pri:0, instance:test.apptest.hotel.AdultChildrenSearch@7219ec67]" name="twoadultOneAdultChildrenSearch" class="test.apptest.hotel.AdultChildrenSearch"/>
        <method signature="AdultChildrenSearch.twoadultOneChildrenSearch()[pri:0, instance:test.apptest.hotel.AdultChildrenSearch@7219ec67]" name="twoadultOneChildrenSearch" class="test.apptest.hotel.AdultChildrenSearch"/>
        <method signature="FullRoomRate.districtFullRoomRate()[pri:0, instance:test.apptest.hotel.FullRoomRate@6973bf95]" name="districtFullRoomRate" class="test.apptest.hotel.FullRoomRate"/>
        <method signature="SearchDomesticHotelName.SearchDomesticHotelName()[pri:0, instance:test.apptest.hotel.SearchDomesticHotelName@43301423]" name="SearchDomesticHotelName" class="test.apptest.hotel.SearchDomesticHotelName"/>
        <method signature="SearchForDomesticAttractions.searchForDomesticAttractions()[pri:0, instance:test.apptest.hotel.SearchForDomesticAttractions@18ce0030]" name="searchForDomesticAttractions" class="test.apptest.hotel.SearchForDomesticAttractions"/>
        <method signature="SearchHotelInOverseasTrain.searchHotelInOverseasTrain()[pri:0, instance:test.apptest.hotel.SearchHotelInOverseasTrain@56de5251]" name="searchHotelInOverseasTrain" class="test.apptest.hotel.SearchHotelInOverseasTrain"/>
        <method signature="SearchHotelOverseasProvince.SearchHotelOverseasProvince()[pri:0, instance:test.apptest.hotel.SearchHotelOverseasProvince@5276e6b0]" name="SearchHotelOverseasProvince" class="test.apptest.hotel.SearchHotelOverseasProvince"/>
        <method signature="SearchOverseasHotelName.HkSearchEn()[pri:0, instance:test.apptest.hotel.SearchOverseasHotelName@4e91d63f]" name="HkSearchEn" class="test.apptest.hotel.SearchOverseasHotelName"/>
        <method signature="SearchOverseasHotelName.SearchOverseasHotelName()[pri:0, instance:test.apptest.hotel.SearchOverseasHotelName@4e91d63f]" name="SearchOverseasHotelName" class="test.apptest.hotel.SearchOverseasHotelName"/>
        <method signature="StarSearch.Star345Search()[pri:0, instance:test.apptest.hotel.StarSearch@6b26e945]" name="Star345Search" class="test.apptest.hotel.StarSearch"/>
        <method signature="StarSearch.defaultStarSearch()[pri:0, instance:test.apptest.hotel.StarSearch@6b26e945]" name="defaultStarSearch" class="test.apptest.hotel.StarSearch"/>
        <method signature="StarSearch.starSearch()[pri:0, instance:test.apptest.hotel.StarSearch@6b26e945]" name="starSearch" class="test.apptest.hotel.StarSearch"/>
        <method signature="StarSearch.twostarSearch()[pri:0, instance:test.apptest.hotel.StarSearch@6b26e945]" name="twostarSearch" class="test.apptest.hotel.StarSearch"/>
        <method signature="ListChangeCurrency.listChangeKRW()[pri:0, instance:test.apptest.hotel.ListChangeCurrency@3aefe5e5]" name="listChangeKRW" class="test.apptest.hotel.ListChangeCurrency"/>
        <method signature="ListChangeCurrency.listChangePHP()[pri:0, instance:test.apptest.hotel.ListChangeCurrency@3aefe5e5]" name="listChangePHP" class="test.apptest.hotel.ListChangeCurrency"/>
        <method signature="ListFilter.cityFilter()[pri:0, instance:test.apptest.hotel.ListFilter@6af93788]" name="cityFilter" class="test.apptest.hotel.ListFilter"/>
        <method signature="ListFilter.commercialFilter()[pri:0, instance:test.apptest.hotel.ListFilter@6af93788]" name="commercialFilter" class="test.apptest.hotel.ListFilter"/>
        <method signature="ListFilter.emptyFilterResult()[pri:0, instance:test.apptest.hotel.ListFilter@6af93788]" name="emptyFilterResult" class="test.apptest.hotel.ListFilter"/>
        <method signature="ListFilter.filterMarkland()[pri:0, instance:test.apptest.hotel.ListFilter@6af93788]" name="filterMarkland" class="test.apptest.hotel.ListFilter"/>
        <method signature="ListFilter.filterOthers()[pri:0, instance:test.apptest.hotel.ListFilter@6af93788]" name="filterOthers" class="test.apptest.hotel.ListFilter"/>
        <method signature="ListFilter.lessFilterResult()[pri:0, instance:test.apptest.hotel.ListFilter@6af93788]" name="lessFilterResult" class="test.apptest.hotel.ListFilter"/>
        <method signature="ListKeywordsSearch.listMetroStationMoreSearch()[pri:0, instance:test.apptest.hotel.ListKeywordsSearch@460d0a57]" name="listMetroStationMoreSearch" class="test.apptest.hotel.ListKeywordsSearch"/>
        <method signature="ListKeywordsSearch.listMetroStationSearch()[pri:0, instance:test.apptest.hotel.ListKeywordsSearch@460d0a57]" name="listMetroStationSearch" class="test.apptest.hotel.ListKeywordsSearch"/>
        <method signature="ListKeywordsSearch.listProvinceSearchBrand()[pri:0, instance:test.apptest.hotel.ListKeywordsSearch@460d0a57]" name="listProvinceSearchBrand" class="test.apptest.hotel.ListKeywordsSearch"/>
        <method signature="ListWithOtherPage.listWithOther()[pri:0, instance:test.apptest.hotel.ListWithOtherPage@5be6e01c]" name="listWithOther" class="test.apptest.hotel.ListWithOtherPage"/>
        <method signature="MyHotelOrder.MyHotelOrderGuest()[pri:0, instance:test.apptest.hotel.MyHotelOrder@49d904ec]" name="MyHotelOrderGuest" class="test.apptest.hotel.MyHotelOrder"/>
        <method signature="MyHotelOrder.myHotelOrderTrip()[pri:0, instance:test.apptest.hotel.MyHotelOrder@49d904ec]" name="myHotelOrderTrip" class="test.apptest.hotel.MyHotelOrder"/>
        <method signature="MyHotelOrder.noBookingsFound()[pri:0, instance:test.apptest.hotel.MyHotelOrder@49d904ec]" name="noBookingsFound" class="test.apptest.hotel.MyHotelOrder"/>
        <method signature="FavoriteHotels.NoFavoriteHotels()[pri:0, instance:test.apptest.hotel.FavoriteHotels@2e4b8173]" name="NoFavoriteHotels" class="test.apptest.hotel.FavoriteHotels"/>
        <method signature="RoomDisplay.reviews()[pri:0, instance:test.apptest.hotel.RoomDisplay@31d7b7bf]" name="reviews" class="test.apptest.hotel.RoomDisplay"/>
      </group> <!-- Base -->
    </groups>
    <test name="HotelHomePage" duration-ms="45830" started-at="2018-03-07T02:22:30Z" finished-at="2018-03-07T02:23:16Z">
      <class name="test.apptest.hotel.SearchDomesticHotelName">
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:test.apptest.hotel.SearchDomesticHotelName@43301423]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:test.apptest.hotel.SearchDomesticHotelName@43301423]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="beforeClass()[pri:0, instance:test.apptest.hotel.SearchDomesticHotelName@43301423]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="SearchDomesticHotelName()[pri:0, instance:test.apptest.hotel.SearchDomesticHotelName@43301423]" name="SearchDomesticHotelName" duration-ms="0" started-at="2018-03-07T10:23:16Z" description="by chr: 搜索国内酒店名称C1309603" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchDomesticHotelName -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.SearchDomesticHotelName@43301423]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:test.apptest.hotel.SearchDomesticHotelName@43301423]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.SearchDomesticHotelName@43301423]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.SearchDomesticHotelName.SearchDomesticHotelName() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:test.apptest.hotel.SearchDomesticHotelName@43301423]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- test.apptest.hotel.SearchDomesticHotelName -->
      <class name="test.apptest.hotel.AdultChildrenSearch">
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:test.apptest.hotel.AdultChildrenSearch@7219ec67]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.AdultChildrenSearch@7219ec67]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:test.apptest.hotel.AdultChildrenSearch@7219ec67]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="beforeClass()[pri:0, instance:test.apptest.hotel.AdultChildrenSearch@7219ec67]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="adultChildrenSearch()[pri:0, instance:test.apptest.hotel.AdultChildrenSearch@7219ec67]" name="adultChildrenSearch" duration-ms="0" started-at="2018-03-07T10:23:16Z" description="by lnn: 8成人3儿童（均成年）搜索C1309639" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- adultChildrenSearch -->
        <test-method status="SKIP" signature="afterTest()[pri:0, instance:test.apptest.hotel.AdultChildrenSearch@7219ec67]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.AdultChildrenSearch@7219ec67]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.AdultChildrenSearch.adultChildrenSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.AdultChildrenSearch@7219ec67]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="twoadultOneAdultChildrenSearch()[pri:0, instance:test.apptest.hotel.AdultChildrenSearch@7219ec67]" name="twoadultOneAdultChildrenSearch" duration-ms="0" started-at="2018-03-07T10:23:16Z" description="by ylf: C1309640 2成人2儿童（一成年，一未成年）搜索酒店" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- twoadultOneAdultChildrenSearch -->
        <test-method status="SKIP" signature="afterTest()[pri:0, instance:test.apptest.hotel.AdultChildrenSearch@7219ec67]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.AdultChildrenSearch@7219ec67]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.AdultChildrenSearch.twoadultOneAdultChildrenSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.AdultChildrenSearch@7219ec67]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="twoadultOneChildrenSearch()[pri:0, instance:test.apptest.hotel.AdultChildrenSearch@7219ec67]" name="twoadultOneChildrenSearch" duration-ms="1" started-at="2018-03-07T10:23:16Z" description="by sxm: C1309644 2成人1儿童（1岁），搜索酒店+C1309638 页面默认成人儿童数量搜索" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- twoadultOneChildrenSearch -->
        <test-method status="SKIP" signature="afterTest()[pri:0, instance:test.apptest.hotel.AdultChildrenSearch@7219ec67]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.AdultChildrenSearch@7219ec67]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.AdultChildrenSearch.twoadultOneChildrenSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="FAIL" signature="afterClass()[pri:0, instance:test.apptest.hotel.AdultChildrenSearch@7219ec67]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at test.apptest.hotel.AdultChildrenSearch.afterClass(AdultChildrenSearch.java:381)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeAfterClassMethods(TestMethodWorker.java:225)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:114)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:test.apptest.hotel.AdultChildrenSearch@7219ec67]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- test.apptest.hotel.AdultChildrenSearch -->
      <class name="test.apptest.hotel.FullRoomRate">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:test.apptest.hotel.FullRoomRate@6973bf95]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="1" started-at="2018-03-07T10:23:15Z" finished-at="2018-03-07T10:23:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:test.apptest.hotel.FullRoomRate@6973bf95]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="3" started-at="2018-03-07T10:23:15Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-03-07T10:23:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="FAIL" signature="beforeClass()[pri:0, instance:test.apptest.hotel.FullRoomRate@6973bf95]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:15Z" finished-at="2018-03-07T10:23:15Z">
          <exception class="org.openqa.selenium.remote.UnreachableBrowserException">
            <message>
              <![CDATA[Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:665)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:40)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:249)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:144)
	at io.appium.java_client.DefaultGenericMobileDriver.<init>(DefaultGenericMobileDriver.java:36)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:114)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:132)
	at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:92)
	at service.impl.InitialServiceImpl.appiumAndroidCtripSetUp(InitialServiceImpl.java:58)
	at test.apptest.hotel.FullRoomRate.beforeClass(FullRoomRate.java:36)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:175)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:107)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
Caused by: org.openqa.selenium.WebDriverException: org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:4723 [/127.0.0.1] failed: Connection refused: connect
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:84)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:644)
	... 36 more
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:4723 [/127.0.0.1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:158)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:353)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:380)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:184)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:88)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:71)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.fallBackExecute(ApacheHttpClient.java:144)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.execute(ApacheHttpClient.java:90)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142)
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:69)
	... 37 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:74)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:141)
	... 50 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.remote.UnreachableBrowserException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.FullRoomRate@6973bf95]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="districtFullRoomRate()[pri:0, instance:test.apptest.hotel.FullRoomRate@6973bf95]" name="districtFullRoomRate" duration-ms="1" started-at="2018-03-07T10:23:16Z" description="by lnn: 测试区域满房度C1306883/C1315188" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- districtFullRoomRate -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.FullRoomRate@6973bf95]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.FullRoomRate.districtFullRoomRate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:test.apptest.hotel.FullRoomRate@6973bf95]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:test.apptest.hotel.FullRoomRate@6973bf95]" name="springTestContextAfterTestClass" is-config="true" duration-ms="1" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- test.apptest.hotel.FullRoomRate -->
      <class name="test.apptest.hotel.SearchForDomesticAttractions">
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:test.apptest.hotel.SearchForDomesticAttractions@18ce0030]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:test.apptest.hotel.SearchForDomesticAttractions@18ce0030]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="beforeClass()[pri:0, instance:test.apptest.hotel.SearchForDomesticAttractions@18ce0030]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.SearchForDomesticAttractions@18ce0030]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="searchForDomesticAttractions()[pri:0, instance:test.apptest.hotel.SearchForDomesticAttractions@18ce0030]" name="searchForDomesticAttractions" duration-ms="0" started-at="2018-03-07T10:23:16Z" description="by lnn: 搜索国内区域景点C1309606" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchForDomesticAttractions -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:test.apptest.hotel.SearchForDomesticAttractions@18ce0030]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.SearchForDomesticAttractions@18ce0030]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.SearchForDomesticAttractions.searchForDomesticAttractions() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:test.apptest.hotel.SearchForDomesticAttractions@18ce0030]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- test.apptest.hotel.SearchForDomesticAttractions -->
      <class name="test.apptest.hotel.SearchHotelOverseasProvince">
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:test.apptest.hotel.SearchHotelOverseasProvince@5276e6b0]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:test.apptest.hotel.SearchHotelOverseasProvince@5276e6b0]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.SearchHotelOverseasProvince@5276e6b0]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="beforeClass()[pri:0, instance:test.apptest.hotel.SearchHotelOverseasProvince@5276e6b0]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="SearchHotelOverseasProvince()[pri:0, instance:test.apptest.hotel.SearchHotelOverseasProvince@5276e6b0]" name="SearchHotelOverseasProvince" duration-ms="1" started-at="2018-03-07T10:23:16Z" description="by chr: 根据海外省或城市搜索酒店C1309610" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchHotelOverseasProvince -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.SearchHotelOverseasProvince@5276e6b0]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.SearchHotelOverseasProvince.SearchHotelOverseasProvince() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:test.apptest.hotel.SearchHotelOverseasProvince@5276e6b0]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:test.apptest.hotel.SearchHotelOverseasProvince@5276e6b0]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- test.apptest.hotel.SearchHotelOverseasProvince -->
      <class name="test.apptest.hotel.SearchHotelInOverseasTrain">
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:test.apptest.hotel.SearchHotelInOverseasTrain@56de5251]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:test.apptest.hotel.SearchHotelInOverseasTrain@56de5251]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.SearchHotelInOverseasTrain@56de5251]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="beforeClass()[pri:0, instance:test.apptest.hotel.SearchHotelInOverseasTrain@56de5251]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="searchHotelInOverseasTrain()[pri:0, instance:test.apptest.hotel.SearchHotelInOverseasTrain@56de5251]" name="searchHotelInOverseasTrain" duration-ms="0" started-at="2018-03-07T10:23:16Z" description="by lnn: 根据海外火车站搜索酒店C1309613" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchHotelInOverseasTrain -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.SearchHotelInOverseasTrain@56de5251]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.SearchHotelInOverseasTrain.searchHotelInOverseasTrain() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:test.apptest.hotel.SearchHotelInOverseasTrain@56de5251]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:test.apptest.hotel.SearchHotelInOverseasTrain@56de5251]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- test.apptest.hotel.SearchHotelInOverseasTrain -->
      <class name="test.apptest.hotel.StarSearch">
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:test.apptest.hotel.StarSearch@6b26e945]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:test.apptest.hotel.StarSearch@6b26e945]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="beforeClass()[pri:0, instance:test.apptest.hotel.StarSearch@6b26e945]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.StarSearch@6b26e945]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="Star345Search()[pri:0, instance:test.apptest.hotel.StarSearch@6b26e945]" name="Star345Search" duration-ms="0" started-at="2018-03-07T10:23:16Z" description="by ylf: C1309632	星级为3,4,5搜索" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Star345Search -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.StarSearch@6b26e945]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.StarSearch.Star345Search() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="afterTest()[pri:0, instance:test.apptest.hotel.StarSearch@6b26e945]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.StarSearch@6b26e945]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="defaultStarSearch()[pri:0, instance:test.apptest.hotel.StarSearch@6b26e945]" name="defaultStarSearch" duration-ms="1" started-at="2018-03-07T10:23:16Z" description="by ylf: C1309627	默认价格搜索，默认星级" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultStarSearch -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.StarSearch@6b26e945]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.StarSearch.defaultStarSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="afterTest()[pri:0, instance:test.apptest.hotel.StarSearch@6b26e945]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="SKIP" signature="starSearch()[pri:0, instance:test.apptest.hotel.StarSearch@6b26e945]" name="starSearch" duration-ms="0" started-at="2018-03-07T10:23:16Z" description="by lnn: 星级为3星或者4星或者5星搜索C1309631" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- starSearch -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.StarSearch@6b26e945]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="afterTest()[pri:0, instance:test.apptest.hotel.StarSearch@6b26e945]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.StarSearch@6b26e945]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.StarSearch.starSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="twostarSearch()[pri:0, instance:test.apptest.hotel.StarSearch@6b26e945]" name="twostarSearch" duration-ms="1" started-at="2018-03-07T10:23:16Z" description="by sxm: C1309630星级分别为&lt;=2星搜索" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- twostarSearch -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.StarSearch@6b26e945]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.StarSearch@6b26e945]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.StarSearch.twostarSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="afterTest()[pri:0, instance:test.apptest.hotel.StarSearch@6b26e945]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="FAIL" signature="afterClass()[pri:0, instance:test.apptest.hotel.StarSearch@6b26e945]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at test.apptest.hotel.StarSearch.afterClass(StarSearch.java:209)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeAfterClassMethods(TestMethodWorker.java:225)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:114)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:test.apptest.hotel.StarSearch@6b26e945]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- test.apptest.hotel.StarSearch -->
      <class name="test.apptest.hotel.SearchOverseasHotelName">
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:test.apptest.hotel.SearchOverseasHotelName@4e91d63f]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="beforeClass()[pri:0, instance:test.apptest.hotel.SearchOverseasHotelName@4e91d63f]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:test.apptest.hotel.SearchOverseasHotelName@4e91d63f]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.SearchOverseasHotelName@4e91d63f]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="HkSearchEn()[pri:0, instance:test.apptest.hotel.SearchOverseasHotelName@4e91d63f]" name="HkSearchEn" duration-ms="0" started-at="2018-03-07T10:23:16Z" description="by chr: 中文输入英文酒店名称搜索C1309624" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- HkSearchEn -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.SearchOverseasHotelName@4e91d63f]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.SearchOverseasHotelName.HkSearchEn() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.SearchOverseasHotelName@4e91d63f]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="SearchOverseasHotelName()[pri:0, instance:test.apptest.hotel.SearchOverseasHotelName@4e91d63f]" name="SearchOverseasHotelName" duration-ms="0" started-at="2018-03-07T10:23:16Z" description="by chr: 根据海外酒店名称搜索酒店C1309616" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchOverseasHotelName -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:test.apptest.hotel.SearchOverseasHotelName@4e91d63f]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.SearchOverseasHotelName@4e91d63f]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.SearchOverseasHotelName.SearchOverseasHotelName() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:test.apptest.hotel.SearchOverseasHotelName@4e91d63f]" name="springTestContextAfterTestClass" is-config="true" duration-ms="1" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- test.apptest.hotel.SearchOverseasHotelName -->
      <class name="test.apptest.hotel.HomeKeySearch">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="6" started-at="2018-03-07T10:22:30Z" finished-at="2018-03-07T10:22:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="536" started-at="2018-03-07T10:22:30Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-03-07T10:22:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:22:30Z" finished-at="2018-03-07T10:22:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="235" started-at="2018-03-07T10:22:30Z" finished-at="2018-03-07T10:22:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.HomeKeySearch.hotelSearch(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="hotelSearch(java.util.Map)[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="hotelSearch" duration-ms="32123" started-at="2018-03-07T10:22:31Z" description="yefei.yang" data-provider="testData" finished-at="2018-03-07T10:23:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{result=上海, id=C1309602 目的地搜索国内城市名, version=6.2, searchKeyWord=上海}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hotelSearch -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="afterMethod" is-config="true" duration-ms="3484" started-at="2018-03-07T10:23:03Z" finished-at="2018-03-07T10:23:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="3" started-at="2018-03-07T10:23:06Z" finished-at="2018-03-07T10:23:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.HomeKeySearch.hotelSearch(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-03-07T10:23:06Z" finished-at="2018-03-07T10:23:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.HomeKeySearch.hotelSearch(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="FAIL" signature="hotelSearch(java.util.Map)[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="hotelSearch" duration-ms="1012" started-at="2018-03-07T10:23:06Z" description="yefei.yang" data-provider="testData" finished-at="2018-03-07T10:23:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{result=虹橋火車站, id=C1309608 国内火车站搜索酒店, version=6.2, searchKeyWord=上海虹桥火车站}]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.remote.UnreachableBrowserException">
            <message>
              <![CDATA[Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:665)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:40)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:249)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:144)
	at io.appium.java_client.DefaultGenericMobileDriver.<init>(DefaultGenericMobileDriver.java:36)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:114)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:132)
	at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:92)
	at service.impl.InitialServiceImpl.appiumAndroidCtripSetUp(InitialServiceImpl.java:58)
	at test.apptest.hotel.HomeKeySearch.hotelSearch(HomeKeySearch.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
Caused by: org.openqa.selenium.WebDriverException: org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:4723 [/127.0.0.1] failed: Connection refused: connect
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:84)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:644)
	... 43 more
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:4723 [/127.0.0.1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:158)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:353)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:380)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:184)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:88)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:71)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.fallBackExecute(ApacheHttpClient.java:144)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.execute(ApacheHttpClient.java:90)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142)
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:69)
	... 44 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:74)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:141)
	... 57 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.remote.UnreachableBrowserException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hotelSearch -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:07Z" finished-at="2018-03-07T10:23:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-03-07T10:23:07Z" finished-at="2018-03-07T10:23:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.HomeKeySearch.hotelSearch(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="2" started-at="2018-03-07T10:23:07Z" finished-at="2018-03-07T10:23:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.HomeKeySearch.hotelSearch(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="FAIL" signature="hotelSearch(java.util.Map)[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="hotelSearch" duration-ms="995" started-at="2018-03-07T10:23:07Z" description="yefei.yang" data-provider="testData" finished-at="2018-03-07T10:23:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{result=上海虹橋元一希爾頓酒店, id=C1309615 当前城市搜索酒店, version=6.2, searchKeyWord=上海希尔顿}]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.remote.UnreachableBrowserException">
            <message>
              <![CDATA[Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:665)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:40)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:249)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:144)
	at io.appium.java_client.DefaultGenericMobileDriver.<init>(DefaultGenericMobileDriver.java:36)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:114)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:132)
	at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:92)
	at service.impl.InitialServiceImpl.appiumAndroidCtripSetUp(InitialServiceImpl.java:58)
	at test.apptest.hotel.HomeKeySearch.hotelSearch(HomeKeySearch.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
Caused by: org.openqa.selenium.WebDriverException: org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:4723 [/127.0.0.1] failed: Connection refused: connect
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:84)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:644)
	... 43 more
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:4723 [/127.0.0.1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:158)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:353)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:380)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:184)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:88)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:71)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.fallBackExecute(ApacheHttpClient.java:144)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.execute(ApacheHttpClient.java:90)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142)
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:69)
	... 44 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:74)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:141)
	... 57 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.remote.UnreachableBrowserException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hotelSearch -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="2" started-at="2018-03-07T10:23:08Z" finished-at="2018-03-07T10:23:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.HomeKeySearch.hotelSearch(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:08Z" finished-at="2018-03-07T10:23:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-03-07T10:23:08Z" finished-at="2018-03-07T10:23:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.HomeKeySearch.hotelSearch(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="FAIL" signature="hotelSearch(java.util.Map)[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="hotelSearch" duration-ms="1007" started-at="2018-03-07T10:23:08Z" description="yefei.yang" data-provider="testData" finished-at="2018-03-07T10:23:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{result=東方明珠, id=C1309606 根据国内地标搜索酒店, version=6.2, searchKeyWord=东方明珠}]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.remote.UnreachableBrowserException">
            <message>
              <![CDATA[Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:665)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:40)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:249)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:144)
	at io.appium.java_client.DefaultGenericMobileDriver.<init>(DefaultGenericMobileDriver.java:36)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:114)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:132)
	at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:92)
	at service.impl.InitialServiceImpl.appiumAndroidCtripSetUp(InitialServiceImpl.java:58)
	at test.apptest.hotel.HomeKeySearch.hotelSearch(HomeKeySearch.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
Caused by: org.openqa.selenium.WebDriverException: org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:4723 [/127.0.0.1] failed: Connection refused: connect
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:84)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:644)
	... 43 more
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:4723 [/127.0.0.1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:158)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:353)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:380)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:184)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:88)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:71)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.fallBackExecute(ApacheHttpClient.java:144)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.execute(ApacheHttpClient.java:90)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142)
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:69)
	... 44 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:74)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:141)
	... 57 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.remote.UnreachableBrowserException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hotelSearch -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-03-07T10:23:09Z" finished-at="2018-03-07T10:23:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.HomeKeySearch.hotelSearch(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:09Z" finished-at="2018-03-07T10:23:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="2" started-at="2018-03-07T10:23:09Z" finished-at="2018-03-07T10:23:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.HomeKeySearch.hotelSearch(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="FAIL" signature="hotelSearch(java.util.Map)[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="hotelSearch" duration-ms="1008" started-at="2018-03-07T10:23:09Z" description="yefei.yang" data-provider="testData" finished-at="2018-03-07T10:23:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{result=聖淘沙島, id=C1309614 根据海外商圈搜索酒店, version=6.2, searchKeyWord=圣淘沙岛}]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.remote.UnreachableBrowserException">
            <message>
              <![CDATA[Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:665)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:40)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:249)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:144)
	at io.appium.java_client.DefaultGenericMobileDriver.<init>(DefaultGenericMobileDriver.java:36)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:114)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:132)
	at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:92)
	at service.impl.InitialServiceImpl.appiumAndroidCtripSetUp(InitialServiceImpl.java:58)
	at test.apptest.hotel.HomeKeySearch.hotelSearch(HomeKeySearch.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
Caused by: org.openqa.selenium.WebDriverException: org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:4723 [/127.0.0.1] failed: Connection refused: connect
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:84)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:644)
	... 43 more
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:4723 [/127.0.0.1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:158)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:353)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:380)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:184)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:88)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:71)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.fallBackExecute(ApacheHttpClient.java:144)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.execute(ApacheHttpClient.java:90)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142)
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:69)
	... 44 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:74)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:141)
	... 57 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.remote.UnreachableBrowserException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hotelSearch -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="2" started-at="2018-03-07T10:23:10Z" finished-at="2018-03-07T10:23:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.HomeKeySearch.hotelSearch(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:10Z" finished-at="2018-03-07T10:23:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="2" started-at="2018-03-07T10:23:10Z" finished-at="2018-03-07T10:23:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.HomeKeySearch.hotelSearch(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="FAIL" signature="hotelSearch(java.util.Map)[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="hotelSearch" duration-ms="1004" started-at="2018-03-07T10:23:10Z" description="yefei.yang" data-provider="testData" finished-at="2018-03-07T10:23:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{result=上海浦東國際機場, id=C1309604 搜索国内机场, version=6.2, searchKeyWord=上海浦东国际机场}]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.remote.UnreachableBrowserException">
            <message>
              <![CDATA[Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:665)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:40)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:249)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:144)
	at io.appium.java_client.DefaultGenericMobileDriver.<init>(DefaultGenericMobileDriver.java:36)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:114)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:132)
	at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:92)
	at service.impl.InitialServiceImpl.appiumAndroidCtripSetUp(InitialServiceImpl.java:58)
	at test.apptest.hotel.HomeKeySearch.hotelSearch(HomeKeySearch.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
Caused by: org.openqa.selenium.WebDriverException: org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:4723 [/127.0.0.1] failed: Connection refused: connect
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:84)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:644)
	... 43 more
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:4723 [/127.0.0.1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:158)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:353)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:380)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:184)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:88)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:71)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.fallBackExecute(ApacheHttpClient.java:144)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.execute(ApacheHttpClient.java:90)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142)
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:69)
	... 44 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:74)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:141)
	... 57 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.remote.UnreachableBrowserException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hotelSearch -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="2" started-at="2018-03-07T10:23:11Z" finished-at="2018-03-07T10:23:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.HomeKeySearch.hotelSearch(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:11Z" finished-at="2018-03-07T10:23:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-03-07T10:23:11Z" finished-at="2018-03-07T10:23:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.HomeKeySearch.hotelSearch(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="FAIL" signature="hotelSearch(java.util.Map)[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="hotelSearch" duration-ms="1012" started-at="2018-03-07T10:23:11Z" description="yefei.yang" data-provider="testData" finished-at="2018-03-07T10:23:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{result=東京羽田國際機場, id=C1309612 根据海外机场搜索酒店, version=6.2, searchKeyWord=东京羽田国际机场}]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.remote.UnreachableBrowserException">
            <message>
              <![CDATA[Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:665)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:40)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:249)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:144)
	at io.appium.java_client.DefaultGenericMobileDriver.<init>(DefaultGenericMobileDriver.java:36)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:114)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:132)
	at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:92)
	at service.impl.InitialServiceImpl.appiumAndroidCtripSetUp(InitialServiceImpl.java:58)
	at test.apptest.hotel.HomeKeySearch.hotelSearch(HomeKeySearch.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
Caused by: org.openqa.selenium.WebDriverException: org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:4723 [/127.0.0.1] failed: Connection refused: connect
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:84)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:644)
	... 43 more
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:4723 [/127.0.0.1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:158)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:353)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:380)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:184)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:88)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:71)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.fallBackExecute(ApacheHttpClient.java:144)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.execute(ApacheHttpClient.java:90)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142)
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:69)
	... 44 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:74)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:141)
	... 57 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.remote.UnreachableBrowserException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hotelSearch -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="3" started-at="2018-03-07T10:23:12Z" finished-at="2018-03-07T10:23:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.HomeKeySearch.hotelSearch(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:12Z" finished-at="2018-03-07T10:23:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="2" started-at="2018-03-07T10:23:12Z" finished-at="2018-03-07T10:23:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.HomeKeySearch.hotelSearch(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="FAIL" signature="hotelSearch(java.util.Map)[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="hotelSearch" duration-ms="1012" started-at="2018-03-07T10:23:12Z" description="yefei.yang" data-provider="testData" finished-at="2018-03-07T10:23:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{result=曼谷杜莎夫人蠟像館, id=C1309617 根据海外地标筛选酒店功能, version=6.2, searchKeyWord=曼谷杜莎夫人蜡像馆}]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.remote.UnreachableBrowserException">
            <message>
              <![CDATA[Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:665)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:40)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:249)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:144)
	at io.appium.java_client.DefaultGenericMobileDriver.<init>(DefaultGenericMobileDriver.java:36)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:114)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:132)
	at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:92)
	at service.impl.InitialServiceImpl.appiumAndroidCtripSetUp(InitialServiceImpl.java:58)
	at test.apptest.hotel.HomeKeySearch.hotelSearch(HomeKeySearch.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
Caused by: org.openqa.selenium.WebDriverException: org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:4723 [/127.0.0.1] failed: Connection refused: connect
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:84)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:644)
	... 43 more
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:4723 [/127.0.0.1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:158)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:353)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:380)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:184)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:88)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:71)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.fallBackExecute(ApacheHttpClient.java:144)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.execute(ApacheHttpClient.java:90)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142)
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:69)
	... 44 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:74)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:141)
	... 57 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.remote.UnreachableBrowserException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hotelSearch -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:13Z" finished-at="2018-03-07T10:23:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="10" started-at="2018-03-07T10:23:13Z" finished-at="2018-03-07T10:23:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.HomeKeySearch.hotelSearch(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="2" started-at="2018-03-07T10:23:14Z" finished-at="2018-03-07T10:23:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.HomeKeySearch.recentSearches() throws java.net.MalformedURLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="FAIL" signature="recentSearches()[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="recentSearches" duration-ms="1001" started-at="2018-03-07T10:23:14Z" description="yefei.yang" finished-at="2018-03-07T10:23:15Z">
          <exception class="org.openqa.selenium.remote.UnreachableBrowserException">
            <message>
              <![CDATA[Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:665)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:40)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:249)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:144)
	at io.appium.java_client.DefaultGenericMobileDriver.<init>(DefaultGenericMobileDriver.java:36)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:114)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:132)
	at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:92)
	at service.impl.InitialServiceImpl.appiumAndroidCtripSetUp(InitialServiceImpl.java:58)
	at test.apptest.hotel.HomeKeySearch.recentSearches(HomeKeySearch.java:91)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:175)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
Caused by: org.openqa.selenium.WebDriverException: org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:4723 [/127.0.0.1] failed: Connection refused: connect
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:84)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:644)
	... 43 more
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:4723 [/127.0.0.1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:158)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:353)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:380)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:184)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:88)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:71)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.fallBackExecute(ApacheHttpClient.java:144)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.execute(ApacheHttpClient.java:90)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142)
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:69)
	... 44 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:74)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:141)
	... 57 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.remote.UnreachableBrowserException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recentSearches -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="2" started-at="2018-03-07T10:23:15Z" finished-at="2018-03-07T10:23:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.HomeKeySearch.recentSearches() throws java.net.MalformedURLException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:15Z" finished-at="2018-03-07T10:23:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:15Z" finished-at="2018-03-07T10:23:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:test.apptest.hotel.HomeKeySearch@33afa13b]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:15Z" finished-at="2018-03-07T10:23:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- test.apptest.hotel.HomeKeySearch -->
    </test> <!-- HotelHomePage -->
    <test name="HotelListPage" duration-ms="1068" started-at="2018-03-07T02:23:16Z" finished-at="2018-03-07T02:23:17Z">
      <class name="test.apptest.hotel.ListChangeCurrency">
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:test.apptest.hotel.ListChangeCurrency@3aefe5e5]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="beforeClass()[pri:0, instance:test.apptest.hotel.ListChangeCurrency@3aefe5e5]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:test.apptest.hotel.ListChangeCurrency@3aefe5e5]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="listChangeKRW()[pri:0, instance:test.apptest.hotel.ListChangeCurrency@3aefe5e5]" name="listChangeKRW" duration-ms="1" started-at="2018-03-07T10:23:17Z" description="by sxm: C1309722	切换韩币酒店筛选" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listChangeKRW -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.ListChangeCurrency@3aefe5e5]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:test.apptest.hotel.ListChangeCurrency@3aefe5e5]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.ListChangeCurrency@3aefe5e5]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.ListChangeCurrency.listChangeKRW() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.ListChangeCurrency@3aefe5e5]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="listChangePHP()[pri:0, instance:test.apptest.hotel.ListChangeCurrency@3aefe5e5]" name="listChangePHP" duration-ms="0" started-at="2018-03-07T10:23:17Z" description="by sxm: C1309723	切换小币种筛选酒店" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listChangePHP -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:test.apptest.hotel.ListChangeCurrency@3aefe5e5]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.ListChangeCurrency@3aefe5e5]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.ListChangeCurrency.listChangePHP() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:test.apptest.hotel.ListChangeCurrency@3aefe5e5]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:test.apptest.hotel.ListChangeCurrency@3aefe5e5]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- test.apptest.hotel.ListChangeCurrency -->
      <class name="test.apptest.hotel.ListFilter">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:test.apptest.hotel.ListFilter@6af93788]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="1" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:test.apptest.hotel.ListFilter@6af93788]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="1" started-at="2018-03-07T10:23:16Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-03-07T10:23:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="FAIL" signature="beforeClass()[pri:0, instance:test.apptest.hotel.ListFilter@6af93788]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:16Z" finished-at="2018-03-07T10:23:16Z">
          <exception class="org.openqa.selenium.remote.UnreachableBrowserException">
            <message>
              <![CDATA[Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:665)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:40)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:249)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:144)
	at io.appium.java_client.DefaultGenericMobileDriver.<init>(DefaultGenericMobileDriver.java:36)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:114)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:132)
	at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:92)
	at service.impl.InitialServiceImpl.appiumAndroidCtripSetUp(InitialServiceImpl.java:58)
	at test.apptest.hotel.ListFilter.beforeClass(ListFilter.java:294)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:175)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:107)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
Caused by: org.openqa.selenium.WebDriverException: org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:4723 [/127.0.0.1] failed: Connection refused: connect
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:84)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:644)
	... 36 more
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:4723 [/127.0.0.1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:158)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:353)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:380)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:184)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:88)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:71)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.fallBackExecute(ApacheHttpClient.java:144)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.execute(ApacheHttpClient.java:90)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142)
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:69)
	... 37 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:74)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:141)
	... 50 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.remote.UnreachableBrowserException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="cityFilter()[pri:0, instance:test.apptest.hotel.ListFilter@6af93788]" name="cityFilter" duration-ms="1" started-at="2018-03-07T10:23:17Z" description="By sxm : C1309673	下级城市或更多下级城市筛选" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cityFilter -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.ListFilter@6af93788]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:test.apptest.hotel.ListFilter@6af93788]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.ListFilter@6af93788]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.ListFilter.cityFilter() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.ListFilter@6af93788]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="commercialFilter()[pri:0, instance:test.apptest.hotel.ListFilter@6af93788]" name="commercialFilter" duration-ms="1" started-at="2018-03-07T10:23:17Z" description="By sxm : C1309669	商圈或更多商圈筛选" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- commercialFilter -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:test.apptest.hotel.ListFilter@6af93788]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.ListFilter@6af93788]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.ListFilter.commercialFilter() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="emptyFilterResult()[pri:0, instance:test.apptest.hotel.ListFilter@6af93788]" name="emptyFilterResult" duration-ms="1" started-at="2018-03-07T10:23:17Z" description="By sxm : C1309668	附近酒店/目的地搜索无结果的情况下，检查酒店列表是否显示正常" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptyFilterResult -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.ListFilter@6af93788]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:test.apptest.hotel.ListFilter@6af93788]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.ListFilter@6af93788]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.ListFilter.emptyFilterResult() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.ListFilter@6af93788]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="filterMarkland()[pri:0, instance:test.apptest.hotel.ListFilter@6af93788]" name="filterMarkland" duration-ms="1" started-at="2018-03-07T10:23:17Z" description="by ylf: C1309670 热门地标或更多地标筛选" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filterMarkland -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:test.apptest.hotel.ListFilter@6af93788]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.ListFilter@6af93788]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.ListFilter.filterMarkland()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.ListFilter@6af93788]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="filterOthers()[pri:0, instance:test.apptest.hotel.ListFilter@6af93788]" name="filterOthers" duration-ms="1" started-at="2018-03-07T10:23:17Z" description="by ylf: C1309676 其他筛选" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filterOthers -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.ListFilter@6af93788]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.ListFilter.filterOthers()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:test.apptest.hotel.ListFilter@6af93788]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="lessFilterResult()[pri:0, instance:test.apptest.hotel.ListFilter@6af93788]" name="lessFilterResult" duration-ms="1" started-at="2018-03-07T10:23:17Z" description="By sxm : C1309668	附近酒店/目的地搜索少结果的情况下，检查酒店列表是否显示正常" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lessFilterResult -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.ListFilter@6af93788]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:test.apptest.hotel.ListFilter@6af93788]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.ListFilter@6af93788]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.ListFilter.lessFilterResult() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:test.apptest.hotel.ListFilter@6af93788]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:test.apptest.hotel.ListFilter@6af93788]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- test.apptest.hotel.ListFilter -->
      <class name="test.apptest.hotel.ListKeywordsSearch">
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:test.apptest.hotel.ListKeywordsSearch@460d0a57]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="beforeClass()[pri:0, instance:test.apptest.hotel.ListKeywordsSearch@460d0a57]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:test.apptest.hotel.ListKeywordsSearch@460d0a57]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.ListKeywordsSearch@460d0a57]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="listMetroStationMoreSearch()[pri:0, instance:test.apptest.hotel.ListKeywordsSearch@460d0a57]" name="listMetroStationMoreSearch" duration-ms="1" started-at="2018-03-07T10:23:17Z" description="By ylf : C1309692	地铁站更多搜索" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listMetroStationMoreSearch -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:test.apptest.hotel.ListKeywordsSearch@460d0a57]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.ListKeywordsSearch@460d0a57]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.ListKeywordsSearch.listMetroStationMoreSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.ListKeywordsSearch@460d0a57]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="listMetroStationSearch()[pri:0, instance:test.apptest.hotel.ListKeywordsSearch@460d0a57]" name="listMetroStationSearch" duration-ms="1" started-at="2018-03-07T10:23:17Z" description="By ylf : C1309691	地铁站搜索" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listMetroStationSearch -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:test.apptest.hotel.ListKeywordsSearch@460d0a57]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.ListKeywordsSearch@460d0a57]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.ListKeywordsSearch.listMetroStationSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.ListKeywordsSearch@460d0a57]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="listProvinceSearchBrand()[pri:0, instance:test.apptest.hotel.ListKeywordsSearch@460d0a57]" name="listProvinceSearchBrand" duration-ms="0" started-at="2018-03-07T10:23:17Z" description="By sxm : C1309690	海外省和景点下的品牌搜索" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listProvinceSearchBrand -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:test.apptest.hotel.ListKeywordsSearch@460d0a57]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:test.apptest.hotel.ListKeywordsSearch@460d0a57]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.ListKeywordsSearch@460d0a57]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.ListKeywordsSearch.listProvinceSearchBrand() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:test.apptest.hotel.ListKeywordsSearch@460d0a57]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- test.apptest.hotel.ListKeywordsSearch -->
      <class name="test.apptest.hotel.ListWithOtherPage">
        <test-method status="SKIP" signature="springTestContextBeforeTestClass()[pri:0, instance:test.apptest.hotel.ListWithOtherPage@5be6e01c]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="SKIP" signature="beforeClass()[pri:0, instance:test.apptest.hotel.ListWithOtherPage@5be6e01c]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="springTestContextPrepareTestInstance()[pri:0, instance:test.apptest.hotel.ListWithOtherPage@5be6e01c]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.ListWithOtherPage@5be6e01c]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="listWithOther()[pri:0, instance:test.apptest.hotel.ListWithOtherPage@5be6e01c]" name="listWithOther" duration-ms="0" started-at="2018-03-07T10:23:17Z" description="by sxm: C1309727	包早餐，免费取消，2张床，1张床，及时确认等" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listWithOther -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:test.apptest.hotel.ListWithOtherPage@5be6e01c]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.ListWithOtherPage@5be6e01c]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.ListWithOtherPage.listWithOther() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:test.apptest.hotel.ListWithOtherPage@5be6e01c]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- test.apptest.hotel.ListWithOtherPage -->
    </test> <!-- HotelListPage -->
    <test name="HotelDetailPage" duration-ms="1" started-at="2018-03-07T02:23:17Z" finished-at="2018-03-07T02:23:17Z">
    </test> <!-- HotelDetailPage -->
    <test name="HotelOrderPage" duration-ms="1025" started-at="2018-03-07T02:23:17Z" finished-at="2018-03-07T02:23:18Z">
      <class name="test.apptest.hotel.MyHotelOrder">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:test.apptest.hotel.MyHotelOrder@49d904ec]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:test.apptest.hotel.MyHotelOrder@49d904ec]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="4" started-at="2018-03-07T10:23:17Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-03-07T10:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="FAIL" signature="beforeClass()[pri:0, instance:test.apptest.hotel.MyHotelOrder@49d904ec]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:17Z" finished-at="2018-03-07T10:23:17Z">
          <exception class="org.openqa.selenium.remote.UnreachableBrowserException">
            <message>
              <![CDATA[Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:665)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:40)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:249)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:144)
	at io.appium.java_client.DefaultGenericMobileDriver.<init>(DefaultGenericMobileDriver.java:36)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:114)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:132)
	at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:92)
	at service.impl.InitialServiceImpl.appiumAndroidCtripSetUp(InitialServiceImpl.java:58)
	at test.apptest.hotel.MyHotelOrder.beforeClass(MyHotelOrder.java:35)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:175)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:107)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
Caused by: org.openqa.selenium.WebDriverException: org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:4723 [/127.0.0.1] failed: Connection refused: connect
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:84)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:644)
	... 36 more
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:4723 [/127.0.0.1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:158)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:353)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:380)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:184)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:88)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:71)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.fallBackExecute(ApacheHttpClient.java:144)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.execute(ApacheHttpClient.java:90)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142)
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:69)
	... 37 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:74)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:141)
	... 50 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.remote.UnreachableBrowserException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.MyHotelOrder@49d904ec]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:18Z" finished-at="2018-03-07T10:23:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="MyHotelOrderGuest()[pri:0, instance:test.apptest.hotel.MyHotelOrder@49d904ec]" name="MyHotelOrderGuest" duration-ms="0" started-at="2018-03-07T10:23:18Z" description="By sxm : C1309650 酒店订单/历史订单与订单详情页的跳转联动（快速预订用户）" finished-at="2018-03-07T10:23:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MyHotelOrderGuest -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.MyHotelOrder@49d904ec]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:18Z" finished-at="2018-03-07T10:23:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.MyHotelOrder.MyHotelOrderGuest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.MyHotelOrder@49d904ec]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:18Z" finished-at="2018-03-07T10:23:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="afterTest()[pri:0, instance:test.apptest.hotel.MyHotelOrder@49d904ec]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:18Z" finished-at="2018-03-07T10:23:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="SKIP" signature="myHotelOrderTrip()[pri:0, instance:test.apptest.hotel.MyHotelOrder@49d904ec]" name="myHotelOrderTrip" duration-ms="0" started-at="2018-03-07T10:23:18Z" description="By sxm : C1309650 酒店订单/历史订单与订单详情页的跳转联动（ctrip用户）" finished-at="2018-03-07T10:23:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myHotelOrderTrip -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.MyHotelOrder@49d904ec]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:18Z" finished-at="2018-03-07T10:23:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.MyHotelOrder.myHotelOrderTrip() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="afterTest()[pri:0, instance:test.apptest.hotel.MyHotelOrder@49d904ec]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:18Z" finished-at="2018-03-07T10:23:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.MyHotelOrder@49d904ec]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:18Z" finished-at="2018-03-07T10:23:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="noBookingsFound()[pri:0, instance:test.apptest.hotel.MyHotelOrder@49d904ec]" name="noBookingsFound" duration-ms="0" started-at="2018-03-07T10:23:18Z" description="by lnn: 无任何酒店订单/历史订单记录，卡片展示（快速预订用户和ctrip用户）C1309653" finished-at="2018-03-07T10:23:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noBookingsFound -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.MyHotelOrder@49d904ec]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:18Z" finished-at="2018-03-07T10:23:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.MyHotelOrder.noBookingsFound() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="afterTest()[pri:0, instance:test.apptest.hotel.MyHotelOrder@49d904ec]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:18Z" finished-at="2018-03-07T10:23:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:test.apptest.hotel.MyHotelOrder@49d904ec]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:18Z" finished-at="2018-03-07T10:23:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:test.apptest.hotel.MyHotelOrder@49d904ec]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:18Z" finished-at="2018-03-07T10:23:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- test.apptest.hotel.MyHotelOrder -->
    </test> <!-- HotelOrderPage -->
    <test name="FavoriteHotels" duration-ms="1020" started-at="2018-03-07T02:23:18Z" finished-at="2018-03-07T02:23:19Z">
      <class name="test.apptest.hotel.FavoriteHotels">
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:test.apptest.hotel.FavoriteHotels@2e4b8173]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="3" started-at="2018-03-07T10:23:18Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-03-07T10:23:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:test.apptest.hotel.FavoriteHotels@2e4b8173]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:18Z" finished-at="2018-03-07T10:23:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="FAIL" signature="beforeClass()[pri:0, instance:test.apptest.hotel.FavoriteHotels@2e4b8173]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:18Z" finished-at="2018-03-07T10:23:18Z">
          <exception class="org.openqa.selenium.remote.UnreachableBrowserException">
            <message>
              <![CDATA[Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:665)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:40)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:249)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:144)
	at io.appium.java_client.DefaultGenericMobileDriver.<init>(DefaultGenericMobileDriver.java:36)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:114)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:132)
	at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:92)
	at service.impl.InitialServiceImpl.appiumAndroidCtripSetUp(InitialServiceImpl.java:58)
	at test.apptest.hotel.FavoriteHotels.beforeClass(FavoriteHotels.java:36)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:175)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:107)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
Caused by: org.openqa.selenium.WebDriverException: org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:4723 [/127.0.0.1] failed: Connection refused: connect
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:84)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:644)
	... 36 more
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:4723 [/127.0.0.1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:158)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:353)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:380)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:184)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:88)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:71)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.fallBackExecute(ApacheHttpClient.java:144)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.execute(ApacheHttpClient.java:90)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142)
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:69)
	... 37 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:74)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:141)
	... 50 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.remote.UnreachableBrowserException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.FavoriteHotels@2e4b8173]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:19Z" finished-at="2018-03-07T10:23:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:test.apptest.hotel.FavoriteHotels@2e4b8173]" name="springTestContextAfterTestClass" is-config="true" duration-ms="1" started-at="2018-03-07T10:23:19Z" finished-at="2018-03-07T10:23:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:test.apptest.hotel.FavoriteHotels@2e4b8173]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:19Z" finished-at="2018-03-07T10:23:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.FavoriteHotels@2e4b8173]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:19Z" finished-at="2018-03-07T10:23:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.FavoriteHotels.NoFavoriteHotels() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="NoFavoriteHotels()[pri:0, instance:test.apptest.hotel.FavoriteHotels@2e4b8173]" name="NoFavoriteHotels" duration-ms="0" started-at="2018-03-07T10:23:19Z" description="by ylf: C1309665	无任何喜爱的酒店+返回上级菜单 " finished-at="2018-03-07T10:23:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NoFavoriteHotels -->
      </class> <!-- test.apptest.hotel.FavoriteHotels -->
    </test> <!-- FavoriteHotels -->
    <test name="RoomDisplay" duration-ms="1008" started-at="2018-03-07T02:23:19Z" finished-at="2018-03-07T02:23:20Z">
      <class name="test.apptest.hotel.RoomDisplay">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:test.apptest.hotel.RoomDisplay@31d7b7bf]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="1" started-at="2018-03-07T10:23:19Z" finished-at="2018-03-07T10:23:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:test.apptest.hotel.RoomDisplay@31d7b7bf]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="2" started-at="2018-03-07T10:23:19Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-03-07T10:23:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="FAIL" signature="beforeClass()[pri:0, instance:test.apptest.hotel.RoomDisplay@31d7b7bf]" name="beforeClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:19Z" finished-at="2018-03-07T10:23:19Z">
          <exception class="org.openqa.selenium.remote.UnreachableBrowserException">
            <message>
              <![CDATA[Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.remote.UnreachableBrowserException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure.
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:665)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:40)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:249)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:144)
	at io.appium.java_client.DefaultGenericMobileDriver.<init>(DefaultGenericMobileDriver.java:36)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:114)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:132)
	at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:92)
	at service.impl.InitialServiceImpl.appiumAndroidCtripSetUp(InitialServiceImpl.java:58)
	at test.apptest.hotel.RoomDisplay.beforeClass(RoomDisplay.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:175)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:107)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
Caused by: org.openqa.selenium.WebDriverException: org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:4723 [/127.0.0.1] failed: Connection refused: connect
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '10.32.86.32', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: driver.version: AndroidDriver
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:84)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:644)
	... 36 more
Caused by: org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:4723 [/127.0.0.1] failed: Connection refused: connect
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:158)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:353)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:380)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:184)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:88)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:71)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.fallBackExecute(ApacheHttpClient.java:144)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.execute(ApacheHttpClient.java:90)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142)
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:69)
	... 37 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:74)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:141)
	... 50 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.remote.UnreachableBrowserException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="SKIP" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.RoomDisplay@31d7b7bf]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:20Z" finished-at="2018-03-07T10:23:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="SKIP" signature="afterTest()[pri:0, instance:test.apptest.hotel.RoomDisplay@31d7b7bf]" name="afterTest" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:20Z" finished-at="2018-03-07T10:23:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="SKIP" signature="reviews()[pri:0, instance:test.apptest.hotel.RoomDisplay@31d7b7bf]" name="reviews" duration-ms="0" started-at="2018-03-07T10:23:20Z" description="by sxm: C1309740	详情页酒店政策下方外露优质点评" finished-at="2018-03-07T10:23:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reviews -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.RoomDisplay@31d7b7bf]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:20Z" finished-at="2018-03-07T10:23:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.RoomDisplay.reviews() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="SKIP" signature="afterClass()[pri:0, instance:test.apptest.hotel.RoomDisplay@31d7b7bf]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-03-07T10:23:20Z" finished-at="2018-03-07T10:23:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:test.apptest.hotel.RoomDisplay@31d7b7bf]" name="springTestContextAfterTestClass" is-config="true" duration-ms="1" started-at="2018-03-07T10:23:20Z" finished-at="2018-03-07T10:23:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- test.apptest.hotel.RoomDisplay -->
    </test> <!-- RoomDisplay -->
  </suite> <!-- HotelApp -->
</testng-results>
