<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="1" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="176368" started-at="2018-01-08T07:07:08Z" finished-at="2018-01-08T07:10:04Z">
    <groups>
      <group name="base">
        <method signature="CtripHotel.HotelLogin(java.util.Map)[pri:0, instance:test.apptest.hotel.CtripHotel@5606c0b]" name="HotelLogin" class="test.apptest.hotel.CtripHotel"/>
      </group> <!-- base -->
    </groups>
    <test name="Default test" duration-ms="176368" started-at="2018-01-08T07:07:08Z" finished-at="2018-01-08T07:10:04Z">
      <class name="test.apptest.hotel.CtripHotel">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:test.apptest.hotel.CtripHotel@5606c0b]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="5" started-at="2018-01-08T15:07:08Z" finished-at="2018-01-08T15:07:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:test.apptest.hotel.CtripHotel@5606c0b]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="522" started-at="2018-01-08T15:07:08Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2018-01-08T15:07:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.apptest.hotel.CtripHotel@5606c0b]" name="beforeClass" is-config="true" duration-ms="1" started-at="2018-01-08T15:07:08Z" finished-at="2018-01-08T15:07:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.CtripHotel@5606c0b]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2018-01-08T15:07:09Z" finished-at="2018-01-08T15:07:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.CtripHotel.HotelLogin(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="HotelLogin(java.util.Map)[pri:0, instance:test.apptest.hotel.CtripHotel@5606c0b]" name="HotelLogin" duration-ms="175595" started-at="2018-01-08T15:07:09Z" description="hotelByYyf" data-provider="testData" finished-at="2018-01-08T15:10:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{version=v2.3}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- HotelLogin -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:test.apptest.hotel.CtripHotel@5606c0b]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2018-01-08T15:10:04Z" finished-at="2018-01-08T15:10:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.apptest.hotel.CtripHotel.HotelLogin(java.util.Map) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="FAIL" signature="afterClass()[pri:0, instance:test.apptest.hotel.CtripHotel@5606c0b]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-01-08T15:10:04Z" finished-at="2018-01-08T15:10:04Z">
          <exception class="org.openqa.selenium.remote.SessionNotFoundException">
            <message>
              <![CDATA[A session is either terminated or not started (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 16 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '192.168.56.1', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities [{appPackage=ctrip.english.debug, noReset=true, deviceName=20e7ee83, platform=LINUX, deviceUDID=20e7ee83, desired={appPackage=ctrip.english.debug, appActivity=ctrip.english.LoadingActivity, noReset=true, noSign=true, newCommandTimeout=10, platformVersion=null, browserName=, unicodeKeyboard=true, platformName=Android, deviceName=Android Emulator, resetKeyboard=true, autoAcceptAlerts=True}, newCommandTimeout=10, platformVersion=5.0, webStorageEnabled=false, takesScreenshot=true, browserName=, javascriptEnabled=true, unicodeKeyboard=true, platformName=Android, deviceManufacturer=samsung, resetKeyboard=true, deviceScreenSize=1080x1920, networkConnectionEnabled=true, noSign=true, warnings={}, databaseEnabled=false, appActivity=ctrip.english.LoadingActivity, locationContextEnabled=false, deviceModel=SM-N9008S, autoAcceptAlerts=True}]
Session ID: 1da9f4f8-dcbe-4cf8-a311-3a4477fbd155]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.remote.SessionNotFoundException: A session is either terminated or not started (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 16 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'DST65976', ip: '192.168.56.1', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_121'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities [{appPackage=ctrip.english.debug, noReset=true, deviceName=20e7ee83, platform=LINUX, deviceUDID=20e7ee83, desired={appPackage=ctrip.english.debug, appActivity=ctrip.english.LoadingActivity, noReset=true, noSign=true, newCommandTimeout=10, platformVersion=null, browserName=, unicodeKeyboard=true, platformName=Android, deviceName=Android Emulator, resetKeyboard=true, autoAcceptAlerts=True}, newCommandTimeout=10, platformVersion=5.0, webStorageEnabled=false, takesScreenshot=true, browserName=, javascriptEnabled=true, unicodeKeyboard=true, platformName=Android, deviceManufacturer=samsung, resetKeyboard=true, deviceScreenSize=1080x1920, networkConnectionEnabled=true, noSign=true, warnings={}, databaseEnabled=false, appActivity=ctrip.english.LoadingActivity, locationContextEnabled=false, deviceModel=SM-N9008S, autoAcceptAlerts=True}]
Session ID: 1da9f4f8-dcbe-4cf8-a311-3a4477fbd155
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:40)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:235)
	at org.openqa.selenium.remote.RemoteWebDriver.quit(RemoteWebDriver.java:526)
	at test.apptest.hotel.CtripHotel.afterClass(CtripHotel.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeAfterClassMethods(TestMethodWorker.java:225)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:114)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.remote.SessionNotFoundException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:test.apptest.hotel.CtripHotel@5606c0b]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2018-01-08T15:10:04Z" finished-at="2018-01-08T15:10:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- test.apptest.hotel.CtripHotel -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
